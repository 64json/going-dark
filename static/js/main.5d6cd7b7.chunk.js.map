{"version":3,"sources":["utils.js","Character.js","App.js","index.js"],"names":["classes","vs","filter","v","join","Character","direction","className","teamId","dx","dy","style","mx","Math","abs","my","moving","Array","fill","map","_","i","DIVIDER","ROCK0","ROCK1","ROCK2","TREE","TOWER","JAIL","BORDER_TOP","BORDER_BOTTOM","BORDER_LEFT","BORDER_RIGHT","BORDER_TOP_LEFT","BORDER_TOP_RIGHT","BORDER_BOTTOM_LEFT","BORDER_BOTTOM_RIGHT","obstacles","App","mapHeight","mapWidth","windowHeight","useState","setDelta","x","y","setPos","frame","setFrame","windowWidth","setWindowWidth","height","width","j","flag","top","bottom","left","right","random","initMap","flash","setFlash","scan","scanAngle","setScanAngle","gridSize","useEffect","onKeyDown","e","preventDefault","console","log","key","onKeyUp","onTilt","absolute","alpha","beta","gamma","onResize","window","innerHeight","innerWidth","timer","setInterval","document","addEventListener","clearInterval","removeEventListener","aimingAngle","atan2","currentAngle","unit","PI","delta","magnitude","nx","ny","xFlag","mapCx","mapCy","some","obstacle","yFlag","windowCx","windowCy","mapSx","mapSy","croppedMap","slice","row","crop","offsetX","offsetY","appRef","useRef","app","current","minimapRef","canvas","ctx","getContext","clearRect","colorMap","blocks","Object","keys","forEach","block","find","fillStyle","fillRect","strokeStyle","strokeRect","onTouchStart","ref","onTouchEnd","onClick","fullscreenElement","requestFullscreen","catch","alert","marginTop","marginLeft","paddingLeft","k","length","zIndex","includes","transform","ReactDOM","render","getElementById"],"mappings":"iSAAaA,G,YAAU,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAWA,EAAGC,QAAO,SAAAC,GAAC,OAAIA,KAAGC,KAAK,OCqB1CC,MAjBf,YAA0D,IAKpDC,EALeC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,GAAIC,EAAS,EAATA,MAExCC,EAAKC,KAAKC,IAAIL,GACdM,EAAKF,KAAKC,IAAIJ,GACdM,EAASJ,EAHS,IAGeG,EAHf,GAUxB,OAJET,EADEM,EAAKG,EACKN,EAAK,EAAI,MAAQ,SAEjBC,EAAK,EAAI,OAAS,QAG9B,yBAAKH,UAAWP,EAAQ,YAAD,eAAsBQ,GAAUQ,GAAU,SAAUV,EAAWC,GAAYI,MAAOA,K,ECMzG,IAAIM,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAU,GAAKA,K,oBAhB3CC,E,KACAC,E,KACAC,E,KACAC,E,KACAC,E,KACAC,E,KACAC,E,KAEAC,G,WACAC,E,KACAC,E,MACAC,E,MACAC,E,MACAC,E,MACAC,E,MACAC,E,MAEIC,EAAY,CAACd,EAAOC,EAAOC,EAAOC,EAAMC,EAAOC,EACnDC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAkRaE,MAxOf,YAAqD,IAAtCC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aAAgB,EACrBC,mBAAS,CAAC,EAAG,IADQ,yCAC1CjC,EAD0C,KACtCC,EADsC,KACjCiC,EADiC,OAE3BD,mBAAS,CAAC,EAAG,IAFc,yCAE5CE,EAF4C,KAEzCC,EAFyC,KAErCC,EAFqC,OAGxBJ,mBAAS,GAHe,mBAG3CK,EAH2C,KAGpCC,EAHoC,OAIdN,mBAAwB,EAAfD,EAAmB,GAJd,mBAI7CQ,EAJ6C,KAIhCC,EAJgC,OAK5BR,mBA7CxB,SAAiBS,EAAQC,GACvB,IAAMjC,EAAM,IAAIF,MAAMkC,GAAQjC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OACxC,IAAIJ,MAAMmC,GAAOlC,KAAK,GAAGC,KAAI,SAACC,EAAGiC,GAC/B,IAAIC,EAAO,EAELC,EAAY,IAANlC,EACNmC,EAASnC,IAAM8B,EAAS,EACxBM,EAAa,IAANJ,EACPK,EAAQL,IAAMD,EAAQ,EAe5B,OAdIG,GAAOE,EAAMH,GAAQrB,EAChBsB,GAAOG,EAAOJ,GAAQpB,EACtBsB,GAAUC,EAAMH,GAAQnB,EACxBqB,GAAUE,EAAOJ,GAAQlB,EACzBmB,EAAKD,GAAQzB,EACb2B,EAAQF,GAAQxB,EAChB2B,EAAMH,GAAQvB,EACd2B,EAAOJ,GAAQtB,GAElBnB,KAAK8C,SAAW,MAAKL,GAAQ,CAAC/B,EAAOC,EAAOC,GAAuB,EAAhBZ,KAAK8C,SAAe,IACvE9C,KAAK8C,SAAW,MAAKL,GAAQ5B,GACvB,IAANL,GAAWA,IAAM8B,EAAS,EAAI,IAAGG,GAAQ1B,GACnC,KAANP,IAAUiC,GAAQhC,IAEjBgC,QAIX,OAFAnC,EAAI,IAAIiC,EAAQ,EAAI,IAAMzB,EAC1BR,EAAIgC,EAAS,EAAI,IAAIC,EAAQ,EAAI,IAAMzB,EAChCR,EAkBwByC,CAAQrB,EAAWC,IALA,mBAK3CrB,EAL2C,aAMxBuB,oBAAS,IANe,mBAM3CmB,EAN2C,KAMpCC,EANoC,QAO1BpB,oBAAS,GAPiB,qBAO3CqB,GAP2C,gBAQhBrB,mBAAS,IARO,qBAQ3CsB,GAR2C,MAQhCC,GARgC,MAS9CC,GAAQ,UAAM,KAAN,MAERH,KACFtB,EAAe,GACfQ,EAAc,GACdiB,GAAQ,UAAM,KAAN,MACRtB,EAAI,GACJC,EAAI,GAGNsB,qBAAU,WACR,IAAMC,EAAY,SAAAC,GAChBA,EAAEC,iBACFC,QAAQC,IAAIH,EAAEI,KACd,IAAIhE,EAAK,EACLC,EAAK,EACT,OAAQ2D,EAAEI,KACR,IAAK,YACHhE,IACA,MACF,IAAK,UACHA,IACA,MACF,IAAK,YACHC,IACA,MACF,IAAK,aACHA,IAMJiC,EAAS,CAFTlC,GAAM,IACNC,GAAM,OAIFgE,EAAU,SAAAL,GACd1B,EAAS,CAAC,EAAG,KAGTgC,EAAS,SAAAN,GACIA,EAAEO,SACLP,EAAEQ,MADhB,IAEMC,EAAOT,EAAES,KACTC,EAAQV,EAAEU,MAGhBpC,EAAS,EAFGoC,EAAQ,IACTD,EAAO,OAIdE,EAAW,WACf9B,EAAe+B,OAAOC,YAAcD,OAAOE,WAAa1C,EAAe,GAAK,IAE9EuC,IAEA,IAAMI,EAAQH,OAAOI,aAAY,WAC/BrC,EAASnC,KAAK8C,YACb,IAAO,IAKV,OAJA2B,SAASC,iBAAiB,UAAWnB,GACrCkB,SAASC,iBAAiB,QAASb,GACnCO,OAAOM,iBAAiB,SAAUP,GAClCC,OAAOM,iBAAiB,oBAAqBZ,GAAQ,GAC9C,WACLM,OAAOO,cAAcJ,GACrBE,SAASG,oBAAoB,UAAWrB,GACxCkB,SAASG,oBAAoB,QAASf,GACtCO,OAAOQ,oBAAoB,SAAUT,GACrCC,OAAOQ,oBAAoB,oBAAqBd,MAEjD,IAEHR,qBAAU,WACR,GAAIJ,GAAM,CACR,IAAM2B,EAAc7E,KAAK8E,MAAMjF,EAAID,GAC/BmF,EAAe5B,GACb6B,EAAOhF,KAAKiF,GAAK,IACjBC,EAAQL,EAAcE,EACtBI,EAAYnF,KAAKC,IAAIiF,GAC3B,GAAkB,IAAdC,EAAiB,OACjBA,EAAYnF,KAAKiF,GACnBF,GAAgBG,EAAQC,EAAYH,EAEpCD,GAAgBG,EAAQC,EAAYH,EAEtCD,GAA0B,EAAV/E,KAAKiF,GACrB7B,GAAa2B,OACR,CACL,IAAIK,EAAKrD,EAAInC,EACTyF,EAAKrD,EAAInC,EACPyF,EAAQhF,EAAIiF,GAAQH,EAAK,GAAK,GAAGI,GAAQxD,EAAI,GAAK,GACpDR,EAAUiE,MAAK,SAAAC,GAAQ,OAAKA,EAAWJ,GAAS,OAClDF,EAAKrD,GAEP,IAAM4D,EAAQrF,EAAIiF,GAAQxD,EAAI,GAAK,GAAGyD,GAAQH,EAAK,GAAK,GACpD7D,EAAUiE,MAAK,SAAAC,GAAQ,OAAKA,EAAWC,GAAS,OAClDN,EAAKrD,GAEPC,EAAO,CAACmD,EAAIC,OAEb,CAACnD,IAEJ,IAAMqD,GAAQ7D,EAAY,EAAI,EACxB8D,GAAQ7D,EAAW,EAAI,EACvBiE,GAAWhE,EAAe,EAAI,EAC9BiE,GAAWzD,EAAc,EAAI,EAE7B0D,GAAQP,IAAa,EAAJxD,GAAS6D,GAC1BG,GAAQP,IAAa,EAAJxD,GAAS6D,GAE1BG,GAhIR,SAAc1F,EAAKE,EAAGgC,EAAGF,EAAQC,GAI/B,OAHa/B,EAAI,EAAJ,sBACL,IAAIJ,OAAOI,GAAGH,KAAK,GAAGC,KAAI,kBAAM,IAAIF,MAAMmC,GAAOlC,KAAK,OADjD,YACyDC,EAAI2F,MAAM,EAAGzF,EAAI8B,KACnFhC,EAAI2F,MAAMzF,EAAGA,EAAI8B,IACThC,KAAI,SAAA4F,GAAG,OAAI1D,EAAI,EAAJ,sBACf,IAAIpC,OAAOoC,GAAGnC,KAAK,IADJ,YACW6F,EAAID,MAAM,EAAGzD,EAAID,KAC/C2D,EAAID,MAAMzD,EAAGA,EAAID,MA0HF4D,CAAK7F,EAAKwF,GAAQ,EAAGC,GAAQ,EAAGnE,EAAe,EAAGQ,EAAc,GAE7EgE,IAAe,EAAJrE,GAASA,EACpBsE,IAAe,EAAJrE,GAASA,EAEpBsE,GAASC,iBAAO,MAChBC,GAAMF,GAAOG,QACbC,GAAaH,iBAAO,MACpBI,GAASD,GAAWD,QAC1B,GAAIE,GAAQ,CAAC,IAAD,GACJC,GAAMD,GAAOE,WAAW,MAC9BD,GAAIE,UAAU,EAAG,EAAGH,GAAOpE,MAAOoE,GAAOrE,QACzC,IAAMyE,IAAQ,qBACXjG,EAAQ,WADG,eAEXC,EAAO,WAFI,eAGXN,EAAU,WAHC,IAKRuG,GAASC,OAAOC,KAAKH,IAC3BzG,EAAI6G,SAAQ,SAACjB,EAAK1F,GAChB0F,EAAIiB,SAAQ,SAAC1E,EAAMD,GACjB,IAAM4E,EAAQJ,GAAOK,MAAK,SAAAD,GAAK,OAAKA,EAAQ3E,GAAQ,KAChD2E,KAASL,KACXH,GAAIU,UAAYP,GAASK,GACzBR,GAAIW,SAAS/E,EAAI,EAAGhC,EAAI,EAAG,EAAG,UAKpCoG,GAAIU,UAAY,UAChBV,GAAIW,SAAU/B,IAAa,EAAJxD,GAAU,EAAIuD,IAAa,EAAJxD,GAAU,EAAG,EAAG,GAE9D6E,GAAIY,YAAc,UAClBZ,GAAIa,WAAW1B,GAAQ,EAAGD,GAAQ,EAAG1D,EAAc,EAAGR,EAAe,GAGvE,OACE,yBAAKlC,UAAU,MAAMgI,aAAc,kBAAMzE,GAAS,IAAO0E,IAAKrB,GACzDsB,WAAY,kBAAM3E,GAAS,IAAQ4E,QAAS,YAC1CpD,SAASqD,mBAAqBtB,IAAOA,GAAIuB,mBAC5CvB,GAAIuB,oBAAoBC,MAAMC,SAGhC,yBAAKvI,UAAU,QACb,yBAAKA,UAAWP,EAAQ,OAAQ+D,IAAQ,QAASpD,MAAO,CACtDoI,UAAU,QAAD,OAAU9B,GAAU,EAApB,cAA2B/C,GAA3B,KACT8E,WAAW,QAAD,OAAU9B,GAAU,EAApB,cAA2BhD,GAA3B,KACV+E,YAAalF,GAAI,4BAAiC,KAGhD8C,GAAW1F,KAAI,SAAC4F,EAAK1F,GAAN,OACb,yBAAKd,UAAU,MAAMkE,IAAKpD,GAEtB0F,EAAI5F,KAAI,SAACmC,EAAMD,GACb,IAAMwE,EAAS,CAAC,UAAW,QAAS,QAAS,QAAS,OAAQ,QAAS,OAAQ,MAC7E,aACA,gBACA,cACA,eACA,kBACA,mBACA,qBACA,uBACC3H,QAAO,SAACkB,EAAG8H,GAAJ,OAAW5F,EAAQ,GAAK4F,GAAM,KACxC,OAAOrB,EAAOsB,OAAS,GACrB,yBAAK5I,UAAU,MAAMkE,IAAKpB,EAAG1C,MAAO,CAClC8C,KAAK,QAAD,OAAUJ,EAAV,cAAiBa,GAAjB,OAGF2D,EAAO1G,KAAI,SAAA8G,GAAK,OACd,yBAAKxD,IAAKwD,EAAO1H,UAAWP,EAAQ,QAASiI,GAAQtH,MAAO,CAC1DyI,OAAQ,CAAC,WAAWC,SAASpB,GAAS,EAAIrF,EAAI,GAAS,EAAJA,GAAS6D,GAAWpF,EAAI,EAAI,kBAclG0C,IACD,kBAAC,EAAD,CAAWxD,UAAU,YAAYC,OAAQ,EAAGC,GAAIA,EAAIC,GAAIA,EAAIC,MAAO,CACjE4C,IAAI,QAAD,OAAUkD,GAAV,cAAwBvC,GAAxB,KACHT,KAAK,QAAD,OAAUiD,GAAV,cAAwBxC,GAAxB,SAILH,IACD,yBAAKxD,UAAWP,EAAQ,eAAgB6D,GAAS,SAAUlD,MAAO,CAChEoI,UAAU,QAAD,OAAUtC,GAAV,cAAwBvC,GAAxB,KACT8E,WAAW,QAAD,OAAUtC,GAAV,cAAwBxC,GAAxB,QAIZH,IACA,yBAAKxD,UAAU,YAAYI,MAAO,CAChC2I,UAAU,UAAD,OAAYtF,GAAYnD,KAAKiF,GAAK,IAAlC,YAIV/B,IACD,yBAAKxD,UAAU,WACb,4BAAQiI,IAAKjB,GAAYhH,UAAU,SAAS4C,OAAQZ,EAAWa,MAAOZ,QCpSlF+G,IAASC,OAAO,kBAAC,EAAD,CAAKjH,UAAW,IAAKC,SAAU,GAC1BC,aAAc,KAAO6C,SAASmE,eAAe,W","file":"static/js/main.5d6cd7b7.chunk.js","sourcesContent":["export const classes = (...vs) => vs.filter(v => v).join(' ');\n","import React from 'react';\nimport './Character.scss';\nimport { classes } from './utils';\n\nfunction Character({ className, teamId, dx, dy, style }) {\n  const movingThreshold = .2;\n  const mx = Math.abs(dx);\n  const my = Math.abs(dy);\n  const moving = mx > movingThreshold || my > movingThreshold;\n  let direction;\n  if (mx > my) {\n    direction = dx < 0 ? 'top' : 'bottom';\n  } else {\n    direction = dy < 0 ? 'left' : 'right';\n  }\n  return (\n    <div className={classes('Character', `team_${teamId}`, moving && 'moving', direction, className)} style={style}>\n    </div>\n  );\n}\n\nexport default Character;","import React, { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport Character from './Character';\nimport { classes } from './utils';\n\nconst [\n  DIVIDER,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TREE,\n  TOWER,\n  JAIL,\n  KEY,\n  BORDER_TOP,\n  BORDER_BOTTOM,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n] = new Array(31).fill(0).map((_, i) => 1 << i);\nconst obstacles = [ROCK0, ROCK1, ROCK2, TREE, TOWER, JAIL,\n  BORDER_TOP,\n  BORDER_BOTTOM,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT];\n\nfunction initMap(height, width) {\n  const map = new Array(height).fill(0).map((_, i) =>\n    new Array(width).fill(0).map((_, j) => {\n      let flag = 0;\n\n      const top = i === 0;\n      const bottom = i === height - 1;\n      const left = j === 0;\n      const right = j === width - 1;\n      if (top && left) flag |= BORDER_TOP_LEFT;\n      else if (top && right) flag |= BORDER_TOP_RIGHT;\n      else if (bottom && left) flag |= BORDER_BOTTOM_LEFT;\n      else if (bottom && right) flag |= BORDER_BOTTOM_RIGHT;\n      else if (top) flag |= BORDER_TOP;\n      else if (bottom) flag |= BORDER_BOTTOM;\n      else if (left) flag |= BORDER_LEFT;\n      else if (right) flag |= BORDER_RIGHT;\n      else {\n        if (Math.random() < .01) flag |= [ROCK0, ROCK1, ROCK2][Math.random() * 3 | 0];\n        if (Math.random() < .02) flag |= TREE;\n        if (i === 4 || i === height - 1 - 4) flag |= JAIL;\n        if (i === 80) flag |= DIVIDER;\n      }\n      return flag;\n    }));\n  map[40][width / 2 | 0] |= TOWER;\n  map[height - 1 - 40][width / 2 | 0] |= TOWER;\n  return map;\n}\n\nfunction crop(map, i, j, height, width) {\n  const rows = i < 0\n    ? [...new Array(-i).fill(0).map(() => new Array(width).fill(0)), ...map.slice(0, i + height)]\n    : map.slice(i, i + height);\n  return rows.map(row => j < 0\n    ? [...new Array(-j).fill(0), ...row.slice(0, j + width)]\n    : row.slice(j, j + width),\n  );\n}\n\nfunction App({ mapHeight, mapWidth, windowHeight }) {\n  const [[dx, dy], setDelta] = useState([0, 0]);\n  let [[x, y], setPos] = useState([0, 0]);\n  const [frame, setFrame] = useState(0);\n  let [windowWidth, setWindowWidth] = useState(windowHeight * 2 | 0);\n  const [map, setMap] = useState(initMap(mapHeight, mapWidth));\n  const [flash, setFlash] = useState(false);\n  const [scan, setScan] = useState(true);\n  const [scanAngle, setScanAngle] = useState(0);\n  let gridSize = `${9.09}vw`;\n\n  if (scan) {\n    windowHeight = 81;\n    windowWidth = 81;\n    gridSize = `${1.23}vw`;\n    x = 40;\n    y = 0;\n  }\n\n  useEffect(() => {\n    const onKeyDown = e => {\n      e.preventDefault();\n      console.log(e.key);\n      let dx = 0;\n      let dy = 0;\n      switch (e.key) {\n        case 'ArrowDown':\n          dx++;\n          break;\n        case 'ArrowUp':\n          dx--;\n          break;\n        case 'ArrowLeft':\n          dy--;\n          break;\n        case 'ArrowRight':\n          dy++;\n          break;\n        default:\n      }\n      dx /= 1.2;\n      dy /= 1.2;\n      setDelta([dx, dy]);\n    };\n\n    const onKeyUp = e => {\n      setDelta([0, 0]);\n    };\n\n    const onTilt = e => {\n      const absolute = e.absolute;\n      const alpha = e.alpha;\n      const beta = e.beta;\n      const gamma = e.gamma;\n      const dx = -gamma / 180;\n      const dy = beta / 180;\n      setDelta([dx, dy]);\n    };\n\n    const onResize = () => {\n      setWindowWidth(window.innerHeight / window.innerWidth * windowHeight + .5 | 0);\n    };\n    onResize();\n\n    const timer = window.setInterval(() => {\n      setFrame(Math.random());\n    }, 1000 / 30);\n    document.addEventListener('keydown', onKeyDown);\n    document.addEventListener('keyup', onKeyUp);\n    window.addEventListener('resize', onResize);\n    window.addEventListener('deviceorientation', onTilt, true);\n    return () => {\n      window.clearInterval(timer);\n      document.removeEventListener('keydown', onKeyDown);\n      document.removeEventListener('keyup', onKeyUp);\n      window.removeEventListener('resize', onResize);\n      window.removeEventListener('deviceorientation', onTilt);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (scan) {\n      const aimingAngle = Math.atan2(dy, dx);\n      let currentAngle = scanAngle;\n      const unit = Math.PI / 300;\n      const delta = aimingAngle - currentAngle;\n      const magnitude = Math.abs(delta);\n      if (magnitude === 0) return;\n      if (magnitude > Math.PI) {\n        currentAngle -= delta / magnitude * unit;\n      } else {\n        currentAngle += delta / magnitude * unit;\n      }\n      currentAngle %= Math.PI * 2;\n      setScanAngle(currentAngle);\n    } else {\n      let nx = x + dx;\n      let ny = y + dy;\n      const xFlag = map[mapCx + nx + .5 | 0][mapCy + y + .5 | 0];\n      if (obstacles.some(obstacle => (obstacle & xFlag) > 0)) {\n        nx = x;\n      }\n      const yFlag = map[mapCx + x + .5 | 0][mapCy + ny + .5 | 0];\n      if (obstacles.some(obstacle => (obstacle & yFlag) > 0)) {\n        ny = y;\n      }\n      setPos([nx, ny]);\n    }\n  }, [frame]);\n\n  const mapCx = mapHeight / 2 | 0;\n  const mapCy = mapWidth / 2 | 0;\n  const windowCx = windowHeight / 2 | 0;\n  const windowCy = windowWidth / 2 | 0;\n\n  const mapSx = mapCx + (x | 0) - windowCx;\n  const mapSy = mapCy + (y | 0) - windowCy;\n\n  const croppedMap = crop(map, mapSx - 1, mapSy - 1, windowHeight + 2, windowWidth + 2);\n\n  const offsetX = (x | 0) - x;\n  const offsetY = (y | 0) - y;\n\n  const appRef = useRef(null);\n  const app = appRef.current;\n  const minimapRef = useRef(null);\n  const canvas = minimapRef.current;\n  if (canvas) {\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const colorMap = {\n      [TOWER]: '#ffe300',\n      [JAIL]: '#606060',\n      [DIVIDER]: '#808080',\n    };\n    const blocks = Object.keys(colorMap);\n    map.forEach((row, i) => {\n      row.forEach((flag, j) => {\n        const block = blocks.find(block => (block & flag) > 0);\n        if (block in colorMap) {\n          ctx.fillStyle = colorMap[block];\n          ctx.fillRect(j - 2, i - 2, 5, 5);\n        }\n      });\n    });\n\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fillRect((mapCy + (y | 0)) - 1, (mapCx + (x | 0)) - 1, 3, 3);\n\n    ctx.strokeStyle = '#FFFFFF';\n    ctx.strokeRect(mapSy - 1, mapSx - 1, windowWidth + 2, windowHeight + 2);\n  }\n\n  return (\n    <div className=\"App\" onTouchStart={() => setFlash(true)} ref={appRef}\n         onTouchEnd={() => setFlash(false)} onClick={() => {\n      if (!document.fullscreenElement && app && app.requestFullscreen) {\n        app.requestFullscreen().catch(alert);\n      }\n    }}>\n      <div className=\"game\">\n        <div className={classes('grid', scan && 'scan')} style={{\n          marginTop: `calc(${offsetX - 1} * ${gridSize})`,\n          marginLeft: `calc(${offsetY - 1} * ${gridSize})`,\n          paddingLeft: scan ? `calc((100vh - 100vw) / 2)` : '',\n        }}>\n          {\n            croppedMap.map((row, i) => (\n              <div className=\"row\" key={i}>\n                {\n                  row.map((flag, j) => {\n                    const blocks = ['divider', 'rock0', 'rock1', 'rock2', 'tree', 'tower', 'jail', 'key',\n                      'border_top',\n                      'border_bottom',\n                      'border_left',\n                      'border_right',\n                      'border_top_left',\n                      'border_top_right',\n                      'border_bottom_left',\n                      'border_bottom_right']\n                      .filter((_, k) => (flag & (1 << k)) > 0);\n                    return blocks.length > 0 && (\n                      <div className=\"col\" key={j} style={{\n                        left: `calc(${j} * ${gridSize})`,\n                      }}>\n                        {\n                          blocks.map(block => (\n                            <div key={block} className={classes('block', block)} style={{\n                              zIndex: ['divider'].includes(block) ? 0 : x + 1 < (x | 0) - windowCx + i ? 2 : 0,\n                            }}>\n                            </div>\n                          ))\n                        }\n                      </div>\n                    );\n                  })\n                }\n              </div>\n            ))\n          }\n        </div>\n        {\n          !scan &&\n          <Character className=\"character\" teamId={0} dx={dx} dy={dy} style={{\n            top: `calc(${windowCx} * ${gridSize})`,\n            left: `calc(${windowCy} * ${gridSize})`,\n          }}/>\n        }\n        {\n          !scan &&\n          <div className={classes('illumination', flash && 'flash')} style={{\n            marginTop: `calc(${windowCx} * ${gridSize})`,\n            marginLeft: `calc(${windowCy} * ${gridSize})`,\n          }}/>\n        }\n        {\n          scan &&\n          <div className=\"spotlight\" style={{\n            transform: `rotate(${scanAngle / Math.PI * 180}deg)`,\n          }}/>\n        }\n        {\n          !scan &&\n          <div className=\"minimap\">\n            <canvas ref={minimapRef} className=\"canvas\" height={mapHeight} width={mapWidth}/>\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App mapHeight={161} mapWidth={81}\n                     windowHeight={11}/>, document.getElementById('root'));\n"],"sourceRoot":""}
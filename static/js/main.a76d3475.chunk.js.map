{"version":3,"sources":["utils.js","beans/Pos.js","beans/User.js","beans/Window.js","beans/Game.js","blocks.js","beans/Map.js","Character.js","GameRenderer.js","App.js","index.js"],"names":["classes","vs","filter","v","join","sq","x","Pos","y","this","pos","Math","sqrt","round","User","teamId","_pos","delta","hasKey","isFlashing","isScanning","atan2","plus","Me","Window","height","width","window","innerHeight","innerWidth","toFixed","Game","map","users","_window","find","user","me","Array","fill","_","i","DIVIDER","ROCK0","ROCK1","ROCK2","TREE","TOWER","JAIL","KEY","BORDER_TOP","BORDER_BOTTOM","BORDER_LEFT","BORDER_RIGHT","BORDER_TOP_LEFT","BORDER_TOP_RIGHT","BORDER_BOTTOM_LEFT","BORDER_BOTTOM_RIGHT","Map","j","flag","top","bottom","left","right","random","indices","slice","row","callback","forEach","userCount","center","clear","Character","direction","className","style","moving","magnitude","abs","obstacles","GameRenderer","game","useState","frame","setFrame","scanAngle","setScanAngle","useEffect","onKeyDown","e","preventDefault","dx","dy","key","onKeyUp","onTilt","beta","gamma","onResize","resize","timer","setInterval","document","addEventListener","clearInterval","removeEventListener","aimingAngle","angle","currentAngle","unit","PI","currentPos","nextPos","some","obstacle","has","stop","croppedMap","blockPos","crop","distanceTo","minus","minimapRef","useRef","canvas","current","ctx","getContext","clearRect","attrMap","blocks","Object","keys","block","color","size","fillStyle","fillRect","otherUsers","strokeStyle","strokeRect","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onClick","add","marginTop","gridSize","marginLeft","paddingLeft","k","length","zIndex","includes","transform","ref","getSpawnPos","ally1","enemy1","enemy2","App","appRef","app","setSocket","socket","io","connect","disconnect","fullscreenElement","requestFullscreen","catch","alert","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a76d3475.chunk.js","sourcesContent":["export const classes = (...vs) => vs.filter(v => v).join(' ');\n\nexport const sq = x => x * x;\n","import { sq } from '../utils';\n\nexport class Pos {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  plus(pos) {\n    return new Pos(this.x + pos.x, this.y + pos.y);\n  }\n\n  minus(pos) {\n    return new Pos(this.x - pos.x, this.y - pos.y);\n  }\n\n  clone() {\n    return new Pos(this.x, this.y);\n  }\n\n  distanceTo(pos) {\n    return Math.sqrt(sq(this.x - pos.x) + sq(this.y - pos.y));\n  }\n\n  get indices() {\n    return [Math.round(this.x), Math.round(this.y)];\n  }\n\n  get magnitude() {\n    return Math.sqrt(sq(this.x) + sq(this.y));\n  }\n}\n","import { Pos } from './Pos';\n\nexport class User {\n  constructor(teamId, pos) {\n    this.teamId = teamId;\n    this._pos = pos;\n    this.delta = new Pos(0, 0);\n    this.hasKey = true;\n    this.isFlashing = false;\n    this.isScanning = false;\n  }\n\n  get pos() {\n    if (this.isScanning) {\n      return new Pos(40, 40);\n    }\n    return this._pos;\n  }\n\n  set pos(pos) {\n    if (this.isScanning) {\n      return;\n    }\n    this._pos = pos;\n  }\n\n  get angle() {\n    return Math.atan2(-this.delta.y, this.delta.x);\n  }\n\n  get nextPos() {\n    return this.pos.plus(this.delta);\n  }\n}\n\nexport class Me extends User {\n}","import { Pos } from './Pos';\n\nexport class Window {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n\n  get gridSize() {\n    return `${(100 / this.height).toFixed(2)}vw`;\n  }\n\n  get center() {\n    return new Pos(\n      this.height / 2 | 0,\n      this.width / 2 | 0,\n    );\n  }\n\n  resize() {\n    this.width = window.innerHeight / window.innerWidth * this.height + .5 | 0;\n  }\n}","import { Me } from './User';\nimport { Window } from './Window';\n\nexport class Game {\n  constructor(map, users, window) {\n    this.map = map;\n    this.users = users;\n    this._window = window;\n  }\n\n  get me() {\n    return this.users.find(user => user instanceof Me);\n  }\n\n  get otherUsers() {\n    return this.users.filter(user => !(user instanceof Me));\n  }\n\n  get window() {\n    if (this.me.isScanning) {\n      return new Window((this.map.height + 1) / 2 | 0, this.map.width);\n    }\n    return this._window;\n  }\n}","export const [\n  DIVIDER,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TREE,\n  TOWER,\n  JAIL,\n  KEY,\n  BORDER_TOP,\n  BORDER_BOTTOM,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n] = new Array(31).fill(0).map((_, i) => 1 << i);\n","import {\n  BORDER_BOTTOM,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  DIVIDER,\n  JAIL,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TOWER,\n  TREE,\n} from '../blocks';\nimport { Pos } from './Pos';\n\nexport class Map {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n    const map = new Array(height).fill(0).map((_, i) =>\n      new Array(width).fill(0).map((_, j) => {\n        let flag = 0;\n\n        const top = i === 0;\n        const bottom = i === height - 1;\n        const left = j === 0;\n        const right = j === width - 1;\n        if (top && left) flag |= BORDER_TOP_LEFT;\n        else if (top && right) flag |= BORDER_TOP_RIGHT;\n        else if (bottom && left) flag |= BORDER_BOTTOM_LEFT;\n        else if (bottom && right) flag |= BORDER_BOTTOM_RIGHT;\n        else if (top) flag |= BORDER_TOP;\n        else if (bottom) flag |= BORDER_BOTTOM;\n        else if (left) flag |= BORDER_LEFT;\n        else if (right) flag |= BORDER_RIGHT;\n        else if (i === 80) flag |= DIVIDER;\n        else if (i === 4 || i === height - 1 - 4) flag |= JAIL;\n        else if (Math.random() < .01) flag |= [ROCK0, ROCK1, ROCK2][Math.random() * 3 | 0];\n        else if (Math.random() < .02) flag |= TREE;\n        return flag;\n      }));\n    map[40][width / 2 | 0] |= TOWER;\n    map[height - 1 - 40][width / 2 | 0] |= TOWER;\n    this.map = map;\n  }\n\n  crop(pos, height, width) {\n    const [i, j] = pos.indices;\n    const rows = i < 0\n      ? [...new Array(-i).fill(0).map(() => new Array(width).fill(0)), ...this.map.slice(0, i + height)]\n      : this.map.slice(i, i + height);\n    return rows.map(row => j < 0\n      ? [...new Array(-j).fill(0), ...row.slice(0, j + width)]\n      : row.slice(j, j + width),\n    );\n  }\n\n  add(pos, flag) {\n    const [i, j] = pos.indices;\n    this.map[i][j] |= flag;\n  }\n\n  remove(pos, flag) {\n    const [i, j] = pos.indices;\n    this.map[i][j] &= ~flag;\n  }\n\n  clear(pos) {\n    const [i, j] = pos.indices;\n    this.map[i][j] = 0;\n  }\n\n  has(pos, flag) {\n    const [i, j] = pos.indices;\n    return (this.map[i][j] & flag) > 0;\n  }\n\n  forEach(callback) {\n    return this.map.forEach(callback);\n  }\n\n  get center() {\n    return new Pos(\n      this.height / 2 | 0,\n      this.width / 2 | 0,\n    );\n  }\n\n  getSpawnPos(userCount = 0) {\n    const pos = new Pos(this.height - 6 - userCount, this.center.y);\n    this.clear(pos);\n    return pos;\n  }\n}","import React from 'react';\nimport './Character.scss';\nimport { classes } from './utils';\n\nfunction Character({ className, user, style }) {\n  const movingThreshold = .05;\n  const moving = user.delta.magnitude > movingThreshold;\n  let direction;\n  if (Math.abs(user.delta.x) > Math.abs(user.delta.y)) {\n    direction = user.delta.x < 0 ? 'top' : 'bottom';\n  } else {\n    direction = user.delta.y < 0 ? 'left' : 'right';\n  }\n  return (\n    <div className={classes('Character', `team_${user.teamId}`, moving && 'moving', direction, className)}\n         style={style}>\n      <div className={classes('holding', user.hasKey ? 'key' : 'lamp')}/>\n    </div>\n  );\n}\n\nexport default Character;","import React, { useEffect, useRef, useState } from 'react';\nimport { classes } from './utils';\nimport Character from './Character';\nimport { Pos } from './beans';\nimport {\n  BORDER_BOTTOM,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  DIVIDER,\n  JAIL,\n  KEY,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TOWER,\n  TREE,\n} from './blocks';\n\nconst obstacles = [ROCK0, ROCK1, ROCK2, TREE, TOWER, JAIL,\n  BORDER_TOP,\n  BORDER_BOTTOM,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT];\nconst FPS = 30;\n\nexport function GameRenderer({ game }) {\n  const { me, map } = game;\n  const [frame, setFrame] = useState(0);\n  const [scanAngle, setScanAngle] = useState(0);\n\n  useEffect(() => {\n    const onKeyDown = e => {\n      e.preventDefault();\n      let dx = 0;\n      let dy = 0;\n      switch (e.key) {\n        case 'ArrowDown':\n          dx++;\n          break;\n        case 'ArrowUp':\n          dx--;\n          break;\n        case 'ArrowLeft':\n          dy--;\n          break;\n        case 'ArrowRight':\n          dy++;\n          break;\n        default:\n      }\n      dx /= 5;\n      dy /= 5;\n      me.delta = new Pos(dx, dy);\n    };\n\n    const onKeyUp = e => {\n      me.delta = new Pos(0, 0);\n    };\n\n    const onTilt = e => {\n      const beta = e.beta;\n      const gamma = e.gamma;\n      const dx = -gamma / 360;\n      const dy = beta / 360;\n      me.delta = new Pos(dx, dy);\n    };\n\n    const onResize = () => {\n      game._window.resize();\n    };\n    onResize();\n\n    const timer = window.setInterval(() => {\n      setFrame(Math.random());\n    }, 1000 / FPS);\n    document.addEventListener('keydown', onKeyDown);\n    document.addEventListener('keyup', onKeyUp);\n    window.addEventListener('resize', onResize);\n    window.addEventListener('deviceorientation', onTilt, true);\n    return () => {\n      window.clearInterval(timer);\n      document.removeEventListener('keydown', onKeyDown);\n      document.removeEventListener('keyup', onKeyUp);\n      window.removeEventListener('resize', onResize);\n      window.removeEventListener('deviceorientation', onTilt);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (me.isScanning) {\n      const aimingAngle = me.angle;\n      let currentAngle = scanAngle;\n      const unit = Math.PI / 300;\n      const delta = aimingAngle - currentAngle;\n      const magnitude = Math.abs(delta);\n      if (magnitude === 0) return;\n      if (magnitude > Math.PI) {\n        currentAngle -= delta / magnitude * unit;\n      } else {\n        currentAngle += delta / magnitude * unit;\n      }\n      currentAngle %= Math.PI * 2;\n      setScanAngle(currentAngle);\n    } else {\n      const currentPos = me.pos;\n      const nextPos = me.nextPos;\n      if (obstacles.some(obstacle => map.has(new Pos(nextPos.x, currentPos.y), obstacle))) {\n        nextPos.x = currentPos.x;\n      }\n      if (obstacles.some(obstacle => map.has(new Pos(currentPos.x, nextPos.y), obstacle))) {\n        nextPos.y = currentPos.y;\n      }\n      let stop = false;\n      croppedMap.forEach((row, i) => {\n        row.forEach((flag, j) => {\n          const blockPos = crop.plus(new Pos(i, j));\n          if ((flag & TOWER) > 0 && blockPos.distanceTo(nextPos) < 2) {\n            me.isScanning = true;\n            stop = true;\n          }\n        });\n      });\n      if (!stop) {\n        me.pos = nextPos;\n      }\n    }\n  }, [frame]);\n\n\n  const crop = me.pos.minus(game.window.center).minus(new Pos(3, 3));\n\n  const croppedMap = map.crop(crop, game.window.height + 7, game.window.width + 7);\n\n  const minimapRef = useRef(null);\n  const canvas = minimapRef.current;\n  if (canvas) {\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const attrMap = {\n      [TOWER]: ['#ffe300', 2],\n      [JAIL]: ['#606060', 1],\n      [DIVIDER]: ['#808080', 1],\n      [KEY]: ['#ff6600', 1],\n    };\n    const blocks = Object.keys(attrMap);\n    map.forEach((row, i) => {\n      row.forEach((flag, j) => {\n        const block = blocks.find(block => (block & flag) > 0);\n        if (block in attrMap) {\n          const [color, size] = attrMap[block];\n          ctx.fillStyle = color;\n          ctx.fillRect(j - size, i - size, size * 2 + 1, size * 2 + 1);\n        }\n      });\n    });\n\n    game.otherUsers.forEach(user => {\n      ctx.fillStyle = user.teamId === me.teamId ? '#00FF00' : '#FF0000';\n      ctx.fillRect(user.pos.y - 1, user.pos.x - 1, 3, 3);\n    });\n\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fillRect(me.pos.y - 1, me.pos.x - 1, 3, 3);\n\n    ctx.strokeStyle = '#FFFFFF';\n    ctx.strokeRect(crop.y + 2, crop.x + 2, game.window.width + 2, game.window.height + 2);\n  }\n\n  return (\n    <div className=\"game\"\n         onTouchStart={() => me.isFlashing = true} onTouchEnd={() => me.isFlashing = false}\n         onMouseDown={() => me.isFlashing = true} onMouseUp={() => me.isFlashing = false}\n         onClick={() => {\n           if (me.isScanning) {\n             me.isScanning = false;\n           } else if (me.hasKey) {\n             map.add(me.pos, KEY);\n             me.hasKey = false;\n           }\n         }}>\n      <div className={classes('grid', me.isScanning && 'scan')} style={{\n        marginTop: `calc(${(me.pos.x + .5 | 0) - me.pos.x - 3} * ${game.window.gridSize})`,\n        marginLeft: `calc(${(me.pos.y + .5 | 0) - me.pos.y - 3} * ${game.window.gridSize})`,\n        paddingLeft: me.isScanning ? `calc((100vh - 100vw) / 2)` : '',\n      }}>\n        {\n          croppedMap.map((row, i) => (\n            <div className=\"row\" key={i}>\n              {\n                row.map((flag, j) => {\n                  const blocks = ['divider', 'rock0', 'rock1', 'rock2', 'tree', 'tower', 'jail', 'key',\n                    'border_top',\n                    'border_bottom',\n                    'border_left',\n                    'border_right',\n                    'border_top_left',\n                    'border_top_right',\n                    'border_bottom_left',\n                    'border_bottom_right']\n                    .filter((_, k) => (flag & (1 << k)) > 0);\n                  // console.log(crop.x + i);\n                  return blocks.length > 0 && (\n                    <div className=\"col\" key={j} style={{\n                      left: `calc(${j} * ${game.window.gridSize})`,\n                    }}>\n                      {\n                        blocks.map(block => (\n                          <div key={block} className={classes('block', block)} style={{\n                            zIndex: ['divider', 'key'].includes(block) ? 0 : crop.indices[0] + i,\n                          }}>\n                          </div>\n                        ))\n                      }\n                    </div>\n                  );\n                })\n              }\n            </div>\n          ))\n        }\n      </div>\n      {\n        game.otherUsers.map((user, i) => (\n          <Character key={i} className=\"character\" user={user} style={{\n            zIndex: user.pos.indices[0],\n            top: `calc(${user.pos.x - me.pos.x + game.window.center.x} * ${game.window.gridSize})`,\n            left: `calc(${user.pos.y - me.pos.y + game.window.center.y} * ${game.window.gridSize})`,\n          }}/>\n        ))\n      }\n      {\n        !me.isScanning &&\n        <Character className=\"character\" user={me} style={{\n          zIndex: me.pos.indices[0],\n          top: `calc(${game.window.center.x} * ${game.window.gridSize})`,\n          left: `calc(${game.window.center.y} * ${game.window.gridSize})`,\n        }}/>\n      }\n      {\n        !me.isScanning &&\n        <div className={classes('illumination', me.isFlashing && 'flash')} style={{\n          marginTop: `calc(${game.window.center.x} * ${game.window.gridSize})`,\n          marginLeft: `calc(${game.window.center.y} * ${game.window.gridSize})`,\n        }}/>\n      }\n      {\n        me.isScanning &&\n        <div className=\"spotlight\" style={{\n          transform: `rotate(${scanAngle / Math.PI * 180}deg)`,\n        }}/>\n      }\n      {\n        !me.isScanning &&\n        <div className=\"minimap\">\n          <canvas ref={minimapRef} className=\"canvas\" height={map.height} width={map.width}/>\n        </div>\n      }\n    </div>\n  );\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport { Game, Map, Me, User, Window } from './beans';\nimport { GameRenderer } from './GameRenderer';\nimport io from 'socket.io-client';\n\n\nconst map = new Map(161, 81);\nconst me = new Me(0, map.getSpawnPos());\n\nconst ally1 = new User(0, map.getSpawnPos(1));\nconst enemy1 = new User(1, map.getSpawnPos(2));\nconst enemy2 = new User(1, map.getSpawnPos(3));\n\nconst game = new Game(map, [me, ally1, enemy1, enemy2], new Window(11, 22));\n\nfunction App() {\n  const appRef = useRef(null);\n  const app = appRef.current;\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    const socket = io.connect('http://localhost:8080');\n    setSocket(socket);\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  return (\n    <div className=\"App\" ref={appRef}\n         onClick={() => {\n           if (!document.fullscreenElement) {\n             if (app && app.requestFullscreen) {\n               app.requestFullscreen().catch(alert);\n             }\n           }\n         }}>\n      <GameRenderer game={game}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}
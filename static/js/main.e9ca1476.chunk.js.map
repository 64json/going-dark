{"version":3,"sources":["utils.js","Character.js","beans/Pos.js","beans/User.js","beans/Window.js","blocks.js","beans/Map.js","beans/Team.js","beans/Game.js","GameRenderer.js","Lobby.js","App.js","index.js"],"names":["classes","vs","filter","v","join","sq","x","UUID","Math","random","toString","substring","RANDOM_GAME_ID","Character","direction","className","user","style","reversed","moving","delta","magnitude","abs","y","teamId","hasKey","Pos","this","pos","sqrt","round","posJson","User","uuid","isFlashing","isScanning","_pos","_delta","_hasKey","_isFlashing","_isScanning","server","equals","updateUser","atan2","plus","userJson","Me","restore","Window","height","width","resize","window","innerHeight","innerWidth","toFixed","windowJson","Array","fill","map","_","i","DIVIDER","ROCK0","ROCK1","ROCK2","TREE","TOWER","JAIL","KEY","BORDER_TOP","BORDER_BOTTOM","BORDER_LEFT","BORDER_RIGHT","BORDER_TOP_LEFT","BORDER_TOP_RIGHT","BORDER_BOTTOM_LEFT","BORDER_BOTTOM_RIGHT","Map","j","flag","top","bottom","left","right","indices","topPad","bottomPad","leftPad","rightPad","slice","row","updateMap","callback","forEach","mapJson","Team","id","scanAngle","achievedKeyCount","_scanAngle","_achievedKeyCount","updateTeam","teamJson","Game","users","teams","PI","_window","sync","team","allies","length","center","clear","find","me","gameJson","obstacles","GameRenderer","game","useState","frame","setFrame","useEffect","onKeyDown","e","preventDefault","dx","dy","key","onKeyUp","onTilt","beta","gamma","onResize","document","addEventListener","removeEventListener","timer","setInterval","clearInterval","aimingAngle","angle","currentAngle","unit","currentPos","nextPos","some","obstacle","has","stop","crop","offsetI","offsetJ","offset","croppedMap","blockPos","distanceTo","minus","pad","offsetX","offsetY","minimapRef","useRef","canvas","current","ctx","getContext","clearRect","attrMap","blocks","Object","keys","block","color","size","fillStyle","fillRect","otherUsers","strokeStyle","strokeRect","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onClick","add","gridSize","k","zIndex","includes","marginTop","marginLeft","transform","ref","Lobby","socket","gameIds","setGameIds","on","gameId","emit","undefined","App","appRef","app","setSocket","setGame","io","connect","disconnect","updateGame","updatedGame","value","updatedUser","updatedTeam","handleJoinGame","push","getSpawnPos","handleUpdateGame","assign","handleUpdateMap","handleUpdateUser","handleUpdateTeam","removeListener","fullscreenElement","requestFullscreen","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e9ca1476.chunk.js","sourcesContent":["export const classes = (...vs) => vs.filter(v => v).join(' ');\n\nexport const sq = x => x * x;\n\nexport const UUID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n\nexport const RANDOM_GAME_ID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);;","import React from 'react';\nimport './Character.scss';\nimport { classes } from './utils';\n\nfunction Character({ className, user, style, reversed }) {\n  const movingThreshold = .05;\n  const moving = user.delta.magnitude > movingThreshold;\n  let direction;\n  if (Math.abs(user.delta.x) > Math.abs(user.delta.y)) {\n    direction = user.delta.x * (reversed ? -1 : 1) < 0 ? 'top' : 'bottom';\n  } else {\n    direction = user.delta.y * (reversed ? -1 : 1) < 0 ? 'left' : 'right';\n  }\n  return (\n    <div className={classes('Character', `team_${user.teamId}`, moving && 'moving', direction, className)}\n         style={style}>\n      <div className={classes('holding', user.hasKey ? 'key' : 'lamp')}/>\n    </div>\n  );\n}\n\nexport default Character;","import { sq } from '../utils';\n\nexport class Pos {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static restore(posJson) {\n    const { x, y } = posJson;\n    return new Pos(x, y);\n  }\n\n  plus(pos) {\n    return new Pos(this.x + pos.x, this.y + pos.y);\n  }\n\n  minus(pos) {\n    return new Pos(this.x - pos.x, this.y - pos.y);\n  }\n\n  clone() {\n    return new Pos(this.x, this.y);\n  }\n\n  distanceTo(pos) {\n    return Math.sqrt(sq(this.x - pos.x) + sq(this.y - pos.y));\n  }\n\n  get indices() {\n    return [Math.round(this.x), Math.round(this.y)];\n  }\n\n  get magnitude() {\n    return Math.sqrt(sq(this.x) + sq(this.y));\n  }\n\n  equals(pos) {\n    return this.x === pos.x && this.y === pos.y;\n  }\n\n  get teamId() {\n    if (this.x < 80) return 0;\n    if (this.x > 80) return 1;\n    return -1;\n  }\n}\n","import { Pos } from './Pos';\nimport { UUID } from '../utils';\n\nexport class User {\n  constructor(uuid, teamId, pos, delta = new Pos(0, 0), hasKey = true, isFlashing = false, isScanning = false) {\n    this.uuid = uuid;\n    this.teamId = teamId;\n    this._pos = pos;\n    this._delta = delta;\n    this._hasKey = hasKey;\n    this._isFlashing = isFlashing;\n    this._isScanning = isScanning;\n  }\n\n  static restore(userJson) {\n    const { uuid, teamId, _pos, _delta, _hasKey, _isFlashing, _isScanning } = userJson;\n    const UserClass = uuid === UUID ? Me : User;\n    return new UserClass(uuid, teamId, Pos.restore(_pos), Pos.restore(_delta), _hasKey, _isFlashing, _isScanning);\n  }\n\n  sync(server) {\n    this.server = server;\n  }\n\n  get pos() {\n    if (this.isScanning) {\n      return new Pos([40, 120][this._pos.teamId], 40);\n    }\n    return this._pos;\n  }\n\n  set pos(pos) {\n    if (this.isScanning) {\n      return;\n    }\n    if (this._pos.equals(pos)) {\n      return;\n    }\n    this._pos = pos;\n    this.server && this.server.updateUser(this);\n  }\n\n  get delta() {\n    return this._delta;\n  }\n\n  set delta(delta) {\n    if (this._delta.equals(delta)) {\n      return;\n    }\n    this._delta = delta;\n    this.server && this.server.updateUser(this);\n  }\n\n  get hasKey() {\n    return this._hasKey;\n  }\n\n  set hasKey(hasKey) {\n    this._hasKey = hasKey;\n    this.server && this.server.updateUser(this);\n  }\n\n  get isFlashing() {\n    return this._isFlashing;\n  }\n\n  set isFlashing(isFlashing) {\n    this._isFlashing = isFlashing;\n    this.server && this.server.updateUser(this);\n  }\n\n  get isScanning() {\n    return this._isScanning;\n  }\n\n  set isScanning(isScanning) {\n    this._isScanning = isScanning;\n    this.server && this.server.updateUser(this);\n  }\n\n  get angle() {\n    return Math.atan2(-this.delta.y, this.delta.x);\n  }\n\n  get nextPos() {\n    return this.pos.plus(this.delta);\n  }\n}\n\nexport class Me extends User {\n}","import { Pos } from './Pos';\n\nexport class Window {\n  constructor(height, width, resize = true) {\n    this.height = height;\n    this.width = width;\n    if (resize) this.resize();\n  }\n\n  static restore(windowJson) {\n    const { height, width } = windowJson;\n    return new Window(height, width);\n  }\n\n  get gridSize() {\n    return `${(100 / this.height).toFixed(2)}vw`;\n  }\n\n  get center() {\n    return new Pos(\n      this.height / 2 | 0,\n      this.width / 2 | 0,\n    );\n  }\n\n  resize() {\n    this.width = window.innerHeight / window.innerWidth * this.height + .5 | 0;\n  }\n}","export const [\n  DIVIDER,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TREE,\n  TOWER,\n  JAIL,\n  KEY,\n  BORDER_TOP,\n  BORDER_BOTTOM,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n] = new Array(31).fill(0).map((_, i) => 1 << i);\n","import {\n  BORDER_BOTTOM,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  DIVIDER,\n  JAIL,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TOWER,\n  TREE,\n} from '../blocks';\nimport { Pos } from './Pos';\n\nexport class Map {\n  constructor(height, width, map) {\n    this.height = height;\n    this.width = width;\n    if (map) {\n      this.map = map;\n    } else {\n      this.map = new Array(height).fill(0).map((_, i) =>\n        new Array(width).fill(0).map((_, j) => {\n          let flag = 0;\n\n          const top = i === 0;\n          const bottom = i === height - 1;\n          const left = j === 0;\n          const right = j === width - 1;\n          if (top && left) flag |= BORDER_TOP_LEFT;\n          else if (top && right) flag |= BORDER_TOP_RIGHT;\n          else if (bottom && left) flag |= BORDER_BOTTOM_LEFT;\n          else if (bottom && right) flag |= BORDER_BOTTOM_RIGHT;\n          else if (top) flag |= BORDER_TOP;\n          else if (bottom) flag |= BORDER_BOTTOM;\n          else if (left) flag |= BORDER_LEFT;\n          else if (right) flag |= BORDER_RIGHT;\n          else if (i === 80) flag |= DIVIDER;\n          else if (i === 4 || i === height - 1 - 4) flag |= JAIL;\n          else if (Math.random() < .01) flag |= [ROCK0, ROCK1, ROCK2][Math.random() * 3 | 0];\n          else if (Math.random() < .02) flag |= TREE;\n          return flag;\n        }));\n      this.map[40][width / 2 | 0] |= TOWER;\n      this.map[height - 1 - 40][width / 2 | 0] |= TOWER;\n    }\n  }\n\n  static restore(mapJson) {\n    const { height, width, map } = mapJson;\n    return new Map(height, width, map);\n  }\n\n  sync(server) {\n    this.server = server;\n  }\n\n  crop(pos, height, width) {\n    let [i, j] = pos.indices;\n    let topPad = 0;\n    let bottomPad = 0;\n    let leftPad = 0;\n    let rightPad = 0;\n    if (i < 0) {\n      topPad = -i;\n      i = 0;\n      height -= topPad;\n    }\n    if (j < 0) {\n      leftPad = -j;\n      j = 0;\n      width -= leftPad;\n    }\n    if (i + height >= this.height) {\n      bottomPad = i + height - this.height;\n      height -= bottomPad;\n    }\n    if (j + width >= this.width) {\n      rightPad = j + width - this.width;\n      width -= rightPad;\n    }\n    return [\n      ...new Array(topPad).fill(0).map(() => new Array(width).fill(0)),\n      ...this.map.slice(i, i + height).map(row => [...new Array(leftPad).fill(0), ...row.slice(j, j + width), ...new Array(rightPad).fill(0)]),\n      ...new Array(bottomPad).fill(0).map(() => new Array(width).fill(0)),\n    ];\n  }\n\n  add(pos, flag) {\n    const [i, j] = pos.indices;\n    this.map[i][j] |= flag;\n    this.server && this.server.updateMap(i, j, this.map[i][j]);\n  }\n\n  remove(pos, flag) {\n    const [i, j] = pos.indices;\n    this.map[i][j] &= ~flag;\n    this.server && this.server.updateMap(i, j, this.map[i][j]);\n  }\n\n  clear(pos) {\n    const [i, j] = pos.indices;\n    this.map[i][j] = 0;\n    this.server && this.server.updateMap(i, j, this.map[i][j]);\n  }\n\n  has(pos, flag) {\n    const [i, j] = pos.indices;\n    return (this.map[i][j] & flag) > 0;\n  }\n\n  forEach(callback) {\n    return this.map.forEach(callback);\n  }\n\n  get center() {\n    return new Pos(\n      this.height / 2 | 0,\n      this.width / 2 | 0,\n    );\n  }\n}","import { Pos } from './Pos';\n\nexport class Team {\n  constructor(id, scanAngle, achievedKeyCount = 0) {\n    this.id = id;\n    this._scanAngle = scanAngle;\n    this._achievedKeyCount = achievedKeyCount;\n  }\n\n  static restore(teamJson) {\n    const { id, _scanAngle, _achievedKeyCount } = teamJson;\n    return new Team(id, _scanAngle, _achievedKeyCount);\n  }\n\n  sync(server) {\n    this.server = server;\n  }\n\n  get scanAngle() {\n    return this._scanAngle;\n  }\n\n  set scanAngle(scanAngle) {\n    this._scanAngle = scanAngle;\n    this.server && this.server.updateTeam(this);\n  }\n\n  get achievedKeyCount() {\n    return this._achievedKeyCount;\n  }\n\n  set achievedKeyCount(achievedKeyCount) {\n    this._achievedKeyCount = achievedKeyCount;\n    this.server && this.server.updateTeam(this);\n  }\n}","import { Me, User } from './User';\nimport { Window } from './Window';\nimport { Map } from './Map';\nimport { Team } from './Team';\nimport { Pos } from './Pos';\n\nexport class Game {\n  constructor(id, map, users = [], teams = [new Team(0, 0), new Team(1, Math.PI)], window) {\n    this.id = id;\n    this.map = map;\n    this.users = users;\n    this.teams = teams;\n    this._window = window;\n  }\n\n  static restore(gameJson) {\n    const { id, map, users, teams, _window } = gameJson;\n    return new Game(id, Map.restore(map), users.map(User.restore), teams.map(Team.restore), Window.restore(_window));\n  }\n\n  sync(server) {\n    this.server = server;\n    this.map.sync(server);\n    this.users.forEach(user => user.sync(server));\n    this.teams.forEach(team => team.sync(server));\n  }\n\n  get me() {\n    return this.users.find(user => user instanceof Me);\n  }\n\n  get allies() {\n    const { teamId } = this.me;\n    return this.users.filter(user => user.teamId === teamId);\n  }\n\n  get otherUsers() {\n    return this.users.filter(user => !(user instanceof Me));\n  }\n\n  get window() {\n    if (this.me.isScanning) {\n      return new Window((this.map.height + 1) / 2 | 0, this.map.width, false);\n    }\n    return this._window;\n  }\n\n  getSpawnPos(teamId) {\n    const allies = this.users.filter(user => user.teamId === teamId);\n    const pos = new Pos([5 + allies.length, this.map.height - 1 - 5 - allies.length][teamId], this.map.center.y);\n    this.map.clear(pos);\n    return pos;\n  }\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { classes } from './utils';\nimport Character from './Character';\nimport { Pos } from './beans';\nimport {\n  BORDER_BOTTOM,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  DIVIDER,\n  JAIL,\n  KEY,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TOWER,\n  TREE,\n} from './blocks';\nimport './GameRenderer.scss';\n\nconst obstacles = [ROCK0, ROCK1, ROCK2, TREE, JAIL,\n  BORDER_TOP,\n  BORDER_BOTTOM,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT];\nconst FPS = 30;\n\nexport function GameRenderer({ game }) {\n  const { me, map, teams } = game;\n  const [frame, setFrame] = useState(0);\n  const reversed = me.teamId === 0;\n\n  useEffect(() => {\n    const onKeyDown = e => {\n      e.preventDefault();\n      let dx = 0;\n      let dy = 0;\n      switch (e.key) {\n        case 'ArrowDown':\n          dx++;\n          break;\n        case 'ArrowUp':\n          dx--;\n          break;\n        case 'ArrowLeft':\n          dy--;\n          break;\n        case 'ArrowRight':\n          dy++;\n          break;\n        default:\n      }\n      dx /= 3;\n      dy /= 3;\n      if (reversed) {\n        dx *= -1;\n        dy *= -1;\n      }\n      me.delta = new Pos(dx, dy);\n    };\n\n    const onKeyUp = e => {\n      me.delta = new Pos(0, 0);\n    };\n\n    const onTilt = e => {\n      const beta = e.beta;\n      const gamma = e.gamma;\n      let dx = -gamma / 360;\n      let dy = beta / 360;\n      if (reversed) {\n        dx *= -1;\n        dy *= -1;\n      }\n      me.delta = new Pos(dx, dy);\n    };\n\n    const onResize = () => {\n      game._window.resize();\n    };\n\n    document.addEventListener('keydown', onKeyDown);\n    document.addEventListener('keyup', onKeyUp);\n    window.addEventListener('resize', onResize);\n    window.addEventListener('deviceorientation', onTilt, true);\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n      document.removeEventListener('keyup', onKeyUp);\n      window.removeEventListener('resize', onResize);\n      window.removeEventListener('deviceorientation', onTilt);\n    };\n  }, [game._window, me]);\n\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      setFrame(Math.random());\n    }, 1000 / FPS);\n    return () => {\n      window.clearInterval(timer);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (me.isScanning) {\n      const aimingAngle = me.angle;\n      let currentAngle = teams[me.pos.teamId].scanAngle;\n      const unit = Math.PI / 300;\n      const delta = aimingAngle - currentAngle;\n      const magnitude = Math.abs(delta);\n      if (magnitude === 0) return;\n      if (magnitude > Math.PI) {\n        currentAngle -= delta / magnitude * unit;\n      } else {\n        currentAngle += delta / magnitude * unit;\n      }\n      currentAngle %= Math.PI * 2;\n      teams[me.pos.teamId].scanAngle = currentAngle;\n    } else {\n      const currentPos = me.pos;\n      const nextPos = me.nextPos;\n      if (obstacles.some(obstacle => map.has(new Pos(nextPos.x, currentPos.y), obstacle))) {\n        nextPos.x = currentPos.x;\n      }\n      if (obstacles.some(obstacle => map.has(new Pos(currentPos.x, nextPos.y), obstacle))) {\n        nextPos.y = currentPos.y;\n      }\n      let stop = false;\n      const [offsetI, offsetJ] = crop.indices;\n      const offset = new Pos(offsetI, offsetJ);\n      croppedMap.forEach((row, i) => {\n        row.forEach((flag, j) => {\n          const blockPos = offset.plus(new Pos(i, j));\n          if ((flag & TOWER) > 0 && blockPos.distanceTo(nextPos) < 2) {\n            me.isScanning = true;\n            stop = true;\n          }\n        });\n      });\n      if (!stop) {\n        me.pos = nextPos;\n      }\n    }\n  }, [frame]);\n\n  const pad = 6;\n  const crop = me.pos.minus(game.window.center).minus(new Pos(pad, pad));\n  const croppedMap = map.crop(crop, game.window.height + pad * 2, game.window.width + pad * 2);\n  const offsetX = (Math.round(crop.x) - crop.x) - pad;\n  const offsetY = (Math.round(crop.y) - crop.y) - pad;\n\n  const minimapRef = useRef(null);\n  const canvas = minimapRef.current;\n  if (canvas) {\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const attrMap = {\n      [TOWER]: ['#ffe300', 2],\n      [JAIL]: ['#606060', 1],\n      [DIVIDER]: ['#808080', 1],\n      [KEY]: ['#ff6600', 1],\n    };\n    const blocks = Object.keys(attrMap);\n    map.forEach((row, i) => {\n      row.forEach((flag, j) => {\n        const block = blocks.find(block => (block & flag) > 0);\n        if (block in attrMap) {\n          const [color, size] = attrMap[block];\n          ctx.fillStyle = color;\n          ctx.fillRect(j - size, i - size, size * 2 + 1, size * 2 + 1);\n        }\n      });\n    });\n\n    game.otherUsers.forEach(user => {\n      ctx.fillStyle = user.teamId === me.teamId ? '#00FF00' : '#FF0000';\n      ctx.fillRect(user.pos.y - 1, user.pos.x - 1, 3, 3);\n    });\n\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fillRect(me.pos.y - 1, me.pos.x - 1, 3, 3);\n\n    ctx.strokeStyle = '#FFFFFF';\n    ctx.strokeRect(me.pos.y - game.window.center.y - 1, me.pos.x - game.window.center.x - 1, game.window.width + 2, game.window.height + 2);\n  }\n\n  return (\n    <div className=\"GameRenderer\"\n         onTouchStart={() => me.isFlashing = true} onTouchEnd={() => me.isFlashing = false}\n         onMouseDown={() => me.isFlashing = true} onMouseUp={() => me.isFlashing = false}\n         onClick={() => {\n           if (me.isScanning) {\n             me.isScanning = false;\n           } else if (me.hasKey) {\n             map.add(me.pos, KEY);\n             me.hasKey = false;\n           }\n         }}>\n      <div className={classes('grid', me.isScanning && 'scan')}>\n        {\n          croppedMap.map((row, i) => (\n            <div className=\"row\" key={i} style={{\n              [reversed ? 'bottom' : 'top']: `calc(${i + offsetX} * ${game.window.gridSize})`,\n            }}>\n              {\n                row.map((flag, j) => {\n                  const blocks = ['divider', 'rock0', 'rock1', 'rock2', 'tree', 'tower', 'jail', 'key',\n                    reversed ? 'border_bottom' : 'border_top',\n                    reversed ? 'border_top' : 'border_bottom',\n                    reversed ? 'border_right' : 'border_left',\n                    reversed ? 'border_left' : 'border_right',\n                    reversed ? 'border_bottom_right' : 'border_top_left',\n                    reversed ? 'border_bottom_left' : 'border_top_right',\n                    reversed ? 'border_top_right' : 'border_bottom_left',\n                    reversed ? 'border_top_left' : 'border_bottom_right']\n                    .filter((_, k) => (flag & (1 << k)) > 0);\n                  return blocks.length > 0 && (\n                    <div className=\"col\" key={j} style={{\n                      [reversed ? 'right' : 'left']: `calc(${j + offsetY} * ${game.window.gridSize}${me.isScanning ? ' + (100vh - 100vw) / 2' : ''})`,\n                    }}>\n                      {\n                        blocks.map(block => (\n                          <div key={block} className={classes('block', block)} style={{\n                            zIndex: ['divider', 'key'].includes(block) ? 0 : (crop.indices[0] + i) * (reversed ? -1 : 1) + game.map.height * 2,\n                          }}>\n                          </div>\n                        ))\n                      }\n                    </div>\n                  );\n                })\n              }\n            </div>\n          ))\n        }\n      </div>\n      {\n        !me.isScanning &&\n        game.otherUsers.map((user, i) => (\n          <Character key={i} className=\"character\" user={user} style={{\n            zIndex: user.pos.indices[0] * (reversed ? -1 : 1) + game.map.height * 2,\n            [reversed ? 'bottom' : 'top']: `calc(${(user.pos.x - me.pos.x) + game.window.center.x} * ${game.window.gridSize})`,\n            [reversed ? 'right' : 'left']: `calc(${(user.pos.y - me.pos.y) + game.window.center.y} * ${game.window.gridSize})`,\n          }} reversed={reversed}/>\n        ))\n      }\n      {\n        !me.isScanning &&\n        <Character className=\"character\" user={me} style={{\n          zIndex: me.pos.indices[0] * (reversed ? -1 : 1) + game.map.height * 2,\n          [reversed ? 'bottom' : 'top']: `calc(${game.window.center.x} * ${game.window.gridSize})`,\n          [reversed ? 'right' : 'left']: `calc(${game.window.center.y} * ${game.window.gridSize})`,\n        }} reversed={reversed}/>\n      }\n      {\n        !me.isScanning &&\n        <div className={classes('illumination', me.isFlashing && 'flash')} style={{\n          marginTop: `calc(${game.window.center.x} * ${game.window.gridSize})`,\n          marginLeft: `calc(${game.window.center.y} * ${game.window.gridSize})`,\n        }}/>\n      }\n      {\n        me.isScanning &&\n        <div className=\"spotlight\" style={{\n          transform: `rotate(${teams[me.pos.teamId].scanAngle / Math.PI * 180}deg)`,\n        }}/>\n      }\n      {\n        !me.isScanning &&\n        <div className={classes('minimap', reversed && 'reversed')}>\n          <canvas ref={minimapRef} className=\"canvas\" height={map.height} width={map.width}/>\n        </div>\n      }\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport './Character.scss';\nimport { Game, Map, Window } from './beans';\nimport { RANDOM_GAME_ID } from './utils';\n\nfunction Lobby({ socket }) {\n  const [gameIds, setGameIds] = useState([]);\n\n  useEffect(() => {\n    socket.on('listGames', setGameIds);\n  }, [socket]);\n  return (\n    <div className=\"Lobby\">\n      <div className=\"roomList\">\n        {\n          gameIds.map(gameId => (\n            <div className=\"room\" key={gameId} onClick={() => {\n              socket.emit('joinGame', gameId);\n            }}>\n              {gameId}\n            </div>\n          ))\n        }\n      </div>\n      <button className=\"create\" onClick={() => {\n        const map = new Map(161, 81);\n        const game = new Game(RANDOM_GAME_ID, map, undefined, undefined, new Window(11, 22));\n        socket.emit('createGame', game.id, game);\n      }}>Create a Game\n      </button>\n    </div>\n  );\n}\n\nexport default Lobby;","import React, { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport { GameRenderer } from './GameRenderer';\nimport io from 'socket.io-client';\nimport Lobby from './Lobby';\nimport { Game, Me, Team, User } from './beans';\nimport { UUID } from './utils';\n\nfunction App() {\n  const appRef = useRef(null);\n  const app = appRef.current;\n  const [socket, setSocket] = useState(null);\n  const [game, setGame] = useState(null);\n\n  useEffect(() => {\n    const socket = io.connect('http://localhost:8080');\n    setSocket(socket);\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const server = {\n      updateGame: updatedGame => socket.emit('updateGame', updatedGame),\n      updateMap: (i, j, value) => socket.emit('updateMap', game.id, i, j, value),\n      updateUser: updatedUser => socket.emit('updateUser', game.id, updatedUser),\n      updateTeam: updatedTeam => socket.emit('updateTeam', game.id, updatedTeam),\n    };\n\n    if (game) {\n      game.sync(server);\n    }\n\n    const handleJoinGame = gameJson => {\n      const game = Game.restore(gameJson);\n      const teamId = game.users.filter(user => user.teamId === 0).length * 2 < game.users.length ? 0 : 1;\n      game.users.push(new Me(UUID, teamId, game.getSpawnPos(teamId)));\n      setGame(game);\n      socket.emit('updateGame', game);\n    };\n\n    const handleUpdateGame = gameJson => {\n      if (!game) return;\n      const updatedGame = Game.restore(gameJson);\n      game.sync(null);\n      Object.assign(game, updatedGame);\n      game.sync(server);\n    };\n\n    const handleUpdateMap = (i, j, value) => {\n      if (!game) return;\n      game.map.map[i][j] = value;\n    };\n\n    const handleUpdateUser = userJson => {\n      if (!game) return;\n      const updatedUser = User.restore(userJson);\n      const user = game.users.find(user => user.uuid === updatedUser.uuid);\n      if (!user) return;\n      user.sync(null);\n      Object.assign(user, updatedUser);\n      user.sync(server);\n    };\n\n    const handleUpdateTeam = teamJson => {\n      if (!game) return;\n      const updatedTeam = Team.restore(teamJson);\n      const team = game.teams.find(team => team.id === updatedTeam.id);\n      if (!team) return;\n      team.sync(null);\n      Object.assign(team, updatedTeam);\n      team.sync(server);\n    };\n\n    socket.on('joinGame', handleJoinGame);\n    socket.on('updateGame', handleUpdateGame);\n    socket.on('updateMap', handleUpdateMap);\n    socket.on('updateUser', handleUpdateUser);\n    socket.on('updateTeam', handleUpdateTeam);\n\n    return () => {\n      socket.removeListener('joinGame', handleJoinGame);\n      socket.removeListener('updateGame', handleUpdateGame);\n      socket.removeListener('updateMap', handleUpdateMap);\n      socket.removeListener('updateUser', handleUpdateUser);\n      socket.removeListener('updateTeam', handleUpdateTeam);\n    };\n  }, [game, socket]);\n\n  return (\n    <div className=\"App\" ref={appRef}\n         onClick={() => {\n           if (!document.fullscreenElement) {\n             if (app && app.requestFullscreen) {\n               // app.requestFullscreen().catch(alert);\n             }\n           }\n         }}>\n      {\n        game &&\n        <GameRenderer game={game}/>\n      }\n      {\n        !game && socket &&\n        <Lobby socket={socket}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["utils.js","Character.js","beans/Pos.js","beans/User.js","beans/Window.js","blocks.js","beans/Map.js","beans/Team.js","beans/Game.js","GameRenderer.js","Lobby.js","App.js","index.js"],"names":["classes","vs","filter","v","join","sq","x","UUID","Math","random","toString","substring","RANDOM_GAME_ID","Character","direction","className","user","style","reversed","moving","delta","magnitude","abs","y","teamId","hasOwnKey","hasStolenKey","Pos","this","pos","sqrt","round","posJson","User","uuid","isFlashing","isScanning","_pos","_delta","_hasOwnKey","_hasStolenKey","_isFlashing","_isScanning","server","equals","updateUser","atan2","plus","userJson","Me","restore","Window","height","width","resize","window","innerHeight","innerWidth","toFixed","windowJson","Array","fill","map","_","i","DIVIDER","ROCK0","ROCK1","ROCK2","TREE","TOWER","JAIL","KEY","BORDER_TOP","BORDER_BOTTOM","BORDER_LEFT","BORDER_RIGHT","BORDER_TOP_LEFT","BORDER_TOP_RIGHT","BORDER_BOTTOM_LEFT","BORDER_BOTTOM_RIGHT","Map","j","flag","top","bottom","left","right","indices","topPad","bottomPad","leftPad","rightPad","slice","row","updateMap","callback","forEach","mapJson","Team","id","scanAngle","achievedKeyCount","_scanAngle","_achievedKeyCount","updateTeam","teamJson","Game","users","teams","PI","_window","sync","team","order","center","clear","find","me","gameJson","obstacles","GameRenderer","game","useState","frame","setFrame","useEffect","onKeyDown","e","preventDefault","dx","dy","key","onKeyUp","onTilt","beta","gamma","onResize","document","addEventListener","removeEventListener","timer","setInterval","clearInterval","aimingAngle","angle","currentAngle","unit","currentPos","nextPos","myObstacles","push","some","obstacle","has","stop","crop","offsetI","offsetJ","offset","croppedMap","blockPos","distanceTo","isOurBase","caughtEnemy","enemies","enemy","add","getJailPos","minus","pad","offsetX","offsetY","minimapRef","useRef","canvas","current","ctx","getContext","clearRect","attrMap","blocks","Object","keys","block","color","size","fillStyle","fillRect","allies","strokeStyle","strokeRect","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onClick","closeImprisonedAllies","ally","isInJail","length","getSpawnPos","remove","gridSize","k","zIndex","includes","marginTop","marginLeft","transform","ref","Lobby","socket","gameIds","setGameIds","on","gameId","emit","undefined","App","appRef","app","setSocket","setGame","io","connect","disconnect","updateGame","updatedGame","value","updatedUser","updatedTeam","handleJoinGame","handleUpdateGame","assign","handleUpdateMap","handleUpdateUser","handleUpdateTeam","removeListener","fullscreenElement","requestFullscreen","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d3c0b2b3.chunk.js","sourcesContent":["export const classes = (...vs) => vs.filter(v => v).join(' ');\n\nexport const sq = x => x * x;\n\nexport const UUID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n\nexport const RANDOM_GAME_ID = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);;","import React from 'react';\nimport './Character.scss';\nimport { classes } from './utils';\n\nfunction Character({ className, user, style, reversed }) {\n  const movingThreshold = .05;\n  const moving = user.delta.magnitude > movingThreshold;\n  let direction;\n  if (Math.abs(user.delta.x) > Math.abs(user.delta.y)) {\n    direction = user.delta.x * (reversed ? -1 : 1) < 0 ? 'top' : 'bottom';\n  } else {\n    direction = user.delta.y * (reversed ? -1 : 1) < 0 ? 'left' : 'right';\n  }\n  return (\n    <div className={classes('Character', `team_${user.teamId}`, moving && 'moving', direction, className)}\n         style={style}>\n      <div className={classes('holding', user.hasOwnKey || user.hasStolenKey ? 'key' : 'lamp')}/>\n    </div>\n  );\n}\n\nexport default Character;","import { sq } from '../utils';\n\nexport class Pos {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static restore(posJson) {\n    const { x, y } = posJson;\n    return new Pos(x, y);\n  }\n\n  plus(pos) {\n    return new Pos(this.x + pos.x, this.y + pos.y);\n  }\n\n  minus(pos) {\n    return new Pos(this.x - pos.x, this.y - pos.y);\n  }\n\n  clone() {\n    return new Pos(this.x, this.y);\n  }\n\n  distanceTo(pos) {\n    return Math.sqrt(sq(this.x - pos.x) + sq(this.y - pos.y));\n  }\n\n  get indices() {\n    return [Math.round(this.x), Math.round(this.y)];\n  }\n\n  get magnitude() {\n    return Math.sqrt(sq(this.x) + sq(this.y));\n  }\n\n  equals(pos) {\n    return this.x === pos.x && this.y === pos.y;\n  }\n\n  get teamId() {\n    if (this.x < 80) return 0;\n    if (this.x > 80) return 1;\n    return -1;\n  }\n}\n","import { Pos } from './Pos';\nimport { UUID } from '../utils';\n\nexport class User {\n  constructor(uuid, teamId, pos, delta = new Pos(0, 0), hasOwnKey = true, hasStolenKey = false, isFlashing = false, isScanning = false) {\n    this.uuid = uuid;\n    this.teamId = teamId;\n    this._pos = pos;\n    this._delta = delta;\n    this._hasOwnKey = hasOwnKey;\n    this._hasStolenKey = hasStolenKey;\n    this._isFlashing = isFlashing;\n    this._isScanning = isScanning;\n  }\n\n  static restore(userJson) {\n    const { uuid, teamId, _pos, _delta, _hasOwnKey, _hasStolenKey, _isFlashing, _isScanning } = userJson;\n    const UserClass = uuid === UUID ? Me : User;\n    return new UserClass(uuid, teamId, Pos.restore(_pos), Pos.restore(_delta), _hasOwnKey, _hasStolenKey, _isFlashing, _isScanning);\n  }\n\n  sync(server) {\n    this.server = server;\n  }\n\n  get pos() {\n    if (this.isScanning) {\n      return new Pos([40, 120][this._pos.teamId], 40);\n    }\n    return this._pos;\n  }\n\n  set pos(pos) {\n    if (this.isScanning) {\n      return;\n    }\n    if (this._pos.equals(pos)) {\n      return;\n    }\n    this._pos = pos;\n    this.server && this.server.updateUser(this);\n  }\n\n  get delta() {\n    return this._delta;\n  }\n\n  set delta(delta) {\n    if (this._delta.equals(delta)) {\n      return;\n    }\n    this._delta = delta;\n    this.server && this.server.updateUser(this);\n  }\n\n  get hasOwnKey() {\n    return this._hasOwnKey;\n  }\n\n  set hasOwnKey(hasOwnKey) {\n    this._hasOwnKey = hasOwnKey;\n    this.server && this.server.updateUser(this);\n  }\n\n  get hasStolenKey() {\n    return this._hasStolenKey;\n  }\n\n  set hasStolenKey(hasStolenKey) {\n    this._hasStolenKey = hasStolenKey;\n    this.server && this.server.updateUser(this);\n  }\n\n  get isFlashing() {\n    return this._isFlashing;\n  }\n\n  set isFlashing(isFlashing) {\n    this._isFlashing = isFlashing;\n    this.server && this.server.updateUser(this);\n  }\n\n  get isScanning() {\n    return this._isScanning;\n  }\n\n  set isScanning(isScanning) {\n    this._isScanning = isScanning;\n    this.server && this.server.updateUser(this);\n  }\n\n  get angle() {\n    return Math.atan2(-this.delta.y, this.delta.x);\n  }\n\n  get nextPos() {\n    return this.pos.plus(this.delta);\n  }\n\n  isOurBase(pos) {\n    return this.teamId === pos.teamId;\n  }\n\n  isInJail() {\n    return this.pos.x < 4 || this.pos.x > 156;\n  }\n}\n\nexport class Me extends User {\n}","import { Pos } from './Pos';\n\nexport class Window {\n  constructor(height, width, resize = true) {\n    this.height = height;\n    this.width = width;\n    if (resize) this.resize();\n  }\n\n  static restore(windowJson) {\n    const { height, width } = windowJson;\n    return new Window(height, width);\n  }\n\n  get gridSize() {\n    return `${(100 / this.height).toFixed(2)}vw`;\n  }\n\n  get center() {\n    return new Pos(\n      this.height / 2 | 0,\n      this.width / 2 | 0,\n    );\n  }\n\n  resize() {\n    this.width = window.innerHeight / window.innerWidth * this.height + .5 | 0;\n  }\n}","export const [\n  DIVIDER,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TREE,\n  TOWER,\n  JAIL,\n  KEY,\n  BORDER_TOP,\n  BORDER_BOTTOM,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n] = new Array(31).fill(0).map((_, i) => 1 << i);\n","import {\n  BORDER_BOTTOM,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  DIVIDER,\n  JAIL,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TOWER,\n  TREE,\n} from '../blocks';\nimport { Pos } from './Pos';\n\nexport class Map {\n  constructor(height, width, map) {\n    this.height = height;\n    this.width = width;\n    if (map) {\n      this.map = map;\n    } else {\n      this.map = new Array(height).fill(0).map((_, i) =>\n        new Array(width).fill(0).map((_, j) => {\n          let flag = 0;\n\n          const top = i === 0;\n          const bottom = i === height - 1;\n          const left = j === 0;\n          const right = j === width - 1;\n          if (top && left) flag |= BORDER_TOP_LEFT;\n          else if (top && right) flag |= BORDER_TOP_RIGHT;\n          else if (bottom && left) flag |= BORDER_BOTTOM_LEFT;\n          else if (bottom && right) flag |= BORDER_BOTTOM_RIGHT;\n          else if (top) flag |= BORDER_TOP;\n          else if (bottom) flag |= BORDER_BOTTOM;\n          else if (left) flag |= BORDER_LEFT;\n          else if (right) flag |= BORDER_RIGHT;\n          else if (i === 80) flag |= DIVIDER;\n          else if (i === 4 || i === height - 1 - 4) flag |= JAIL;\n          else if (Math.random() < .01) flag |= [ROCK0, ROCK1, ROCK2][Math.random() * 3 | 0];\n          else if (Math.random() < .02) flag |= TREE;\n          return flag;\n        }));\n      this.map[40][width / 2 | 0] |= TOWER;\n      this.map[height - 1 - 40][width / 2 | 0] |= TOWER;\n    }\n  }\n\n  static restore(mapJson) {\n    const { height, width, map } = mapJson;\n    return new Map(height, width, map);\n  }\n\n  sync(server) {\n    this.server = server;\n  }\n\n  crop(pos, height, width) {\n    let [i, j] = pos.indices;\n    let topPad = 0;\n    let bottomPad = 0;\n    let leftPad = 0;\n    let rightPad = 0;\n    if (i < 0) {\n      topPad = -i;\n      i = 0;\n      height -= topPad;\n    }\n    if (j < 0) {\n      leftPad = -j;\n      j = 0;\n      width -= leftPad;\n    }\n    if (i + height >= this.height) {\n      bottomPad = i + height - this.height;\n      height -= bottomPad;\n    }\n    if (j + width >= this.width) {\n      rightPad = j + width - this.width;\n      width -= rightPad;\n    }\n    return [\n      ...new Array(topPad).fill(0).map(() => new Array(width).fill(0)),\n      ...this.map.slice(i, i + height).map(row => [...new Array(leftPad).fill(0), ...row.slice(j, j + width), ...new Array(rightPad).fill(0)]),\n      ...new Array(bottomPad).fill(0).map(() => new Array(width).fill(0)),\n    ];\n  }\n\n  add(pos, flag) {\n    const [i, j] = pos.indices;\n    this.map[i][j] |= flag;\n    this.server && this.server.updateMap(i, j, this.map[i][j]);\n  }\n\n  remove(pos, flag) {\n    const [i, j] = pos.indices;\n    this.map[i][j] &= ~flag;\n    this.server && this.server.updateMap(i, j, this.map[i][j]);\n  }\n\n  clear(pos) {\n    const [i, j] = pos.indices;\n    this.map[i][j] = 0;\n    this.server && this.server.updateMap(i, j, this.map[i][j]);\n  }\n\n  has(pos, flag) {\n    const [i, j] = pos.indices;\n    return (this.map[i][j] & flag) > 0;\n  }\n\n  forEach(callback) {\n    return this.map.forEach(callback);\n  }\n\n  get center() {\n    return new Pos(\n      this.height / 2 | 0,\n      this.width / 2 | 0,\n    );\n  }\n}","import { Pos } from './Pos';\n\nexport class Team {\n  constructor(id, scanAngle, achievedKeyCount = 0) {\n    this.id = id;\n    this._scanAngle = scanAngle;\n    this._achievedKeyCount = achievedKeyCount;\n  }\n\n  static restore(teamJson) {\n    const { id, _scanAngle, _achievedKeyCount } = teamJson;\n    return new Team(id, _scanAngle, _achievedKeyCount);\n  }\n\n  sync(server) {\n    this.server = server;\n  }\n\n  get scanAngle() {\n    return this._scanAngle;\n  }\n\n  set scanAngle(scanAngle) {\n    this._scanAngle = scanAngle;\n    this.server && this.server.updateTeam(this);\n  }\n\n  get achievedKeyCount() {\n    return this._achievedKeyCount;\n  }\n\n  set achievedKeyCount(achievedKeyCount) {\n    this._achievedKeyCount = achievedKeyCount;\n    this.server && this.server.updateTeam(this);\n  }\n}","import { Me, User } from './User';\nimport { Window } from './Window';\nimport { Map } from './Map';\nimport { Team } from './Team';\nimport { Pos } from './Pos';\n\nexport class Game {\n  constructor(id, map, users = [], teams = [new Team(0, 0), new Team(1, Math.PI)], window) {\n    this.id = id;\n    this.map = map;\n    this.users = users;\n    this.teams = teams;\n    this._window = window;\n  }\n\n  static restore(gameJson) {\n    const { id, map, users, teams, _window } = gameJson;\n    return new Game(id, Map.restore(map), users.map(User.restore), teams.map(Team.restore), Window.restore(_window));\n  }\n\n  sync(server) {\n    this.server = server;\n    this.map.sync(server);\n    this.users.forEach(user => user.sync(server));\n    this.teams.forEach(team => team.sync(server));\n  }\n\n  get me() {\n    return this.users.find(user => user instanceof Me);\n  }\n\n  get allies() {\n    const { teamId } = this.me;\n    return this.users.filter(user => user.teamId === teamId);\n  }\n\n  get enemies() {\n    const { teamId } = this.me;\n    return this.users.filter(user => user.teamId !== teamId);\n  }\n\n  get otherUsers() {\n    return this.users.filter(user => !(user instanceof Me));\n  }\n\n  get window() {\n    if (this.me.isScanning) {\n      return new Window((this.map.height + 1) / 2 | 0, this.map.width, false);\n    }\n    return this._window;\n  }\n\n  getSpawnPos(teamId, order = 0) {\n    const pos = new Pos([5 + order, this.map.height - 1 - 5 - order][teamId], this.map.center.y);\n    this.map.clear(pos);\n    return pos;\n  }\n\n  getJailPos(teamId) {\n    return new Pos([3, this.map.height - 1 - 3][teamId], 40);\n  }\n\n  getJailX(teamId) {\n    return [4, this.map.height - 4][teamId];\n  }\n}","import React, { useEffect, useRef, useState } from 'react';\nimport { classes } from './utils';\nimport Character from './Character';\nimport { Pos } from './beans';\nimport {\n  BORDER_BOTTOM,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  DIVIDER,\n  JAIL,\n  KEY,\n  ROCK0,\n  ROCK1,\n  ROCK2,\n  TOWER,\n  TREE,\n} from './blocks';\nimport './GameRenderer.scss';\n\nconst obstacles = [ROCK0, ROCK1, ROCK2, TREE, JAIL,\n  BORDER_TOP,\n  BORDER_BOTTOM,\n  BORDER_LEFT,\n  BORDER_RIGHT,\n  BORDER_TOP_LEFT,\n  BORDER_TOP_RIGHT,\n  BORDER_BOTTOM_LEFT,\n  BORDER_BOTTOM_RIGHT];\nconst FPS = 30;\n\nexport function GameRenderer({ game }) {\n  const { me, map, teams } = game;\n  const [frame, setFrame] = useState(0);\n  const reversed = me.teamId === 0;\n\n  useEffect(() => {\n    const onKeyDown = e => {\n      e.preventDefault();\n      let dx = 0;\n      let dy = 0;\n      switch (e.key) {\n        case 'ArrowDown':\n          dx++;\n          break;\n        case 'ArrowUp':\n          dx--;\n          break;\n        case 'ArrowLeft':\n          dy--;\n          break;\n        case 'ArrowRight':\n          dy++;\n          break;\n        default:\n      }\n      dx /= 1;\n      dy /= 1;\n      if (reversed) {\n        dx *= -1;\n        dy *= -1;\n      }\n      me.delta = new Pos(dx, dy);\n    };\n\n    const onKeyUp = e => {\n      me.delta = new Pos(0, 0);\n    };\n\n    const onTilt = e => {\n      const beta = e.beta;\n      const gamma = e.gamma;\n      let dx = -gamma / 360;\n      let dy = beta / 360;\n      if (reversed) {\n        dx *= -1;\n        dy *= -1;\n      }\n      me.delta = new Pos(dx, dy);\n    };\n\n    const onResize = () => {\n      game._window.resize();\n    };\n\n    document.addEventListener('keydown', onKeyDown);\n    document.addEventListener('keyup', onKeyUp);\n    window.addEventListener('resize', onResize);\n    window.addEventListener('deviceorientation', onTilt, true);\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n      document.removeEventListener('keyup', onKeyUp);\n      window.removeEventListener('resize', onResize);\n      window.removeEventListener('deviceorientation', onTilt);\n    };\n  }, [game._window, me]);\n\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      setFrame(Math.random());\n    }, 1000 / FPS);\n    return () => {\n      window.clearInterval(timer);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (me.isScanning) {\n      const aimingAngle = me.angle;\n      let currentAngle = teams[me.pos.teamId].scanAngle;\n      const unit = Math.PI / 300;\n      const delta = aimingAngle - currentAngle;\n      const magnitude = Math.abs(delta);\n      if (magnitude === 0) return;\n      if (magnitude > Math.PI) {\n        currentAngle -= delta / magnitude * unit;\n      } else {\n        currentAngle += delta / magnitude * unit;\n      }\n      currentAngle %= Math.PI * 2;\n      teams[me.pos.teamId].scanAngle = currentAngle;\n    } else {\n      const currentPos = me.pos;\n      const nextPos = me.nextPos;\n      const myObstacles = [...obstacles];\n      if (me.hasOwnKey) {\n        myObstacles.push(DIVIDER);\n      }\n      if (myObstacles.some(obstacle => map.has(new Pos(nextPos.x, currentPos.y), obstacle))) {\n        nextPos.x = currentPos.x;\n      }\n      if (myObstacles.some(obstacle => map.has(new Pos(currentPos.x, nextPos.y), obstacle))) {\n        nextPos.y = currentPos.y;\n      }\n      let stop = false;\n      const [offsetI, offsetJ] = crop.indices;\n      const offset = new Pos(offsetI, offsetJ);\n      croppedMap.forEach((row, i) => {\n        row.forEach((flag, j) => {\n          const blockPos = offset.plus(new Pos(i, j));\n          if ((flag & TOWER) > 0 && blockPos.distanceTo(nextPos) < 2) {\n            me.isScanning = true;\n            stop = true;\n          }\n        });\n      });\n      if (!stop) {\n        me.pos = nextPos;\n        if (me.hasStolenKey && me.teamId === me.pos.teamId) {\n          me.hasStolenKey = false;\n          teams[me.teamId].achievedKeyCount++;\n        }\n        if (me.isOurBase(me.pos)) {\n          const caughtEnemy = game.enemies.find(enemy => enemy.pos.distanceTo(me.pos) < 1);\n          if (caughtEnemy) {\n            if (caughtEnemy.hasStolenKey) {\n              map.add(caughtEnemy.pos, KEY);\n              caughtEnemy.hasStolenKey = false;\n            }\n            caughtEnemy.pos = game.getJailPos(me.teamId);\n          }\n        }\n      }\n    }\n  }, [frame]);\n\n  const pad = 6;\n  const crop = me.pos.minus(game.window.center).minus(new Pos(pad, pad));\n  const croppedMap = map.crop(crop, game.window.height + pad * 2, game.window.width + pad * 2);\n  const offsetX = (Math.round(crop.x) - crop.x) - pad;\n  const offsetY = (Math.round(crop.y) - crop.y) - pad;\n\n  const minimapRef = useRef(null);\n  const canvas = minimapRef.current;\n  if (canvas) {\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const attrMap = {\n      [TOWER]: ['#ffe300', 2],\n      [JAIL]: ['#606060', 1],\n      [DIVIDER]: ['#808080', 1],\n      [KEY]: ['#ff6600', 1],\n    };\n    const blocks = Object.keys(attrMap);\n    map.forEach((row, i) => {\n      row.forEach((flag, j) => {\n        const block = blocks.find(block => (block & flag) > 0);\n        if (block === KEY.toString() && !me.isOurBase(new Pos(i, j))) {\n          return;\n        }\n        if (block in attrMap) {\n          const [color, size] = attrMap[block];\n          ctx.fillStyle = color;\n          ctx.fillRect(j - size, i - size, size * 2 + 1, size * 2 + 1);\n        }\n      });\n    });\n\n    game.allies.forEach(user => {\n      ctx.fillStyle = user.teamId === me.teamId ? '#00FF00' : '#FF0000';\n      ctx.fillRect(user.pos.y - 1, user.pos.x - 1, 3, 3);\n    });\n\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fillRect(me.pos.y - 1, me.pos.x - 1, 3, 3);\n\n    ctx.strokeStyle = '#FFFFFF';\n    ctx.strokeRect(me.pos.y - game.window.center.y - 1, me.pos.x - game.window.center.x - 1, game.window.width + 2, game.window.height + 2);\n  }\n\n  return (\n    <div className=\"GameRenderer\"\n         onTouchStart={() => me.isFlashing = true} onTouchEnd={() => me.isFlashing = false}\n         onMouseDown={() => me.isFlashing = true} onMouseUp={() => me.isFlashing = false}\n         onClick={() => {\n           const closeImprisonedAllies = game.allies.filter(ally => ally.isInJail() && ally.pos.distanceTo(me.pos) < 5);\n           if (me.isScanning) {\n             me.isScanning = false;\n           } else if (me.hasOwnKey) {\n             map.add(me.pos, KEY);\n             me.hasOwnKey = false;\n           } else if (closeImprisonedAllies.length > 0) {\n             closeImprisonedAllies.forEach((ally, i) => {\n               ally.pos = game.getSpawnPos(me.teamId, i);\n             });\n           } else if (!me.hasStolenKey) {\n             croppedMap.forEach((row, i) => {\n               row.forEach((flag, j) => {\n                 const pos = new Pos(crop.x + i, crop.y + j);\n                 if ((flag & KEY) > 0 && me.pos.distanceTo(pos) < 1 && pos.teamId !== me.teamId) {\n                   map.remove(pos, KEY);\n                   me.hasStolenKey = true;\n                 }\n               });\n             });\n           }\n         }}>\n      <div className={classes('grid', me.isScanning && 'scan')}>\n        {\n          croppedMap.map((row, i) => (\n            <div className=\"row\" key={i} style={{\n              [reversed ? 'bottom' : 'top']: `calc(${i + offsetX} * ${game.window.gridSize})`,\n            }}>\n              {\n                row.map((flag, j) => {\n                  const blocks = ['divider', 'rock0', 'rock1', 'rock2', 'tree', 'tower', 'jail', 'key',\n                    reversed ? 'border_bottom' : 'border_top',\n                    reversed ? 'border_top' : 'border_bottom',\n                    reversed ? 'border_right' : 'border_left',\n                    reversed ? 'border_left' : 'border_right',\n                    reversed ? 'border_bottom_right' : 'border_top_left',\n                    reversed ? 'border_bottom_left' : 'border_top_right',\n                    reversed ? 'border_top_right' : 'border_bottom_left',\n                    reversed ? 'border_top_left' : 'border_bottom_right']\n                    .filter((_, k) => (flag & (1 << k)) > 0);\n                  return blocks.length > 0 && (\n                    <div className=\"col\" key={j} style={{\n                      [reversed ? 'right' : 'left']: `calc(${j + offsetY} * ${game.window.gridSize}${me.isScanning ? ' + (100vh - 100vw) / 2' : ''})`,\n                    }}>\n                      {\n                        blocks.map(block => (\n                          <div key={block} className={classes('block', block)} style={{\n                            zIndex: ['divider', 'key'].includes(block) ? 0 : (crop.indices[0] + i) * (reversed ? -1 : 1) + game.map.height * 2,\n                          }}>\n                          </div>\n                        ))\n                      }\n                    </div>\n                  );\n                })\n              }\n            </div>\n          ))\n        }\n      </div>\n      {\n        !me.isScanning &&\n        game.users.map((user, i) => (\n          <Character key={i} className=\"character\" user={user} style={{\n            zIndex: user.pos.indices[0] * (reversed ? -1 : 1) + game.map.height * 2,\n            [reversed ? 'bottom' : 'top']: `calc(${(user.pos.x - me.pos.x) + game.window.center.x} * ${game.window.gridSize})`,\n            [reversed ? 'right' : 'left']: `calc(${(user.pos.y - me.pos.y) + game.window.center.y} * ${game.window.gridSize})`,\n          }} reversed={reversed}/>\n        ))\n      }\n      {\n        !me.isScanning &&\n        <div className=\"dim\"/>\n      }\n      {\n        !me.isScanning &&\n        <div className={classes('illumination', me.isFlashing && 'flash')} style={{\n          marginTop: `calc(${game.window.center.x} * ${game.window.gridSize})`,\n          marginLeft: `calc(${game.window.center.y} * ${game.window.gridSize})`,\n        }}/>\n      }\n      {\n        me.isScanning &&\n        <div className=\"spotlight\" style={{\n          transform: `rotate(${teams[me.pos.teamId].scanAngle / Math.PI * 180}deg)`,\n        }}/>\n      }\n      {\n        !me.isScanning &&\n        <div className={classes('minimap', reversed && 'reversed')}>\n          <canvas ref={minimapRef} className=\"canvas\" height={map.height} width={map.width}/>\n        </div>\n      }\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport './Character.scss';\nimport { Game, Map, Window } from './beans';\nimport { RANDOM_GAME_ID } from './utils';\n\nfunction Lobby({ socket }) {\n  const [gameIds, setGameIds] = useState([]);\n\n  useEffect(() => {\n    socket.on('listGames', setGameIds);\n  }, [socket]);\n  return (\n    <div className=\"Lobby\">\n      <div className=\"roomList\">\n        {\n          gameIds.map(gameId => (\n            <div className=\"room\" key={gameId} onClick={() => {\n              socket.emit('joinGame', gameId);\n            }}>\n              {gameId}\n            </div>\n          ))\n        }\n      </div>\n      <button className=\"create\" onClick={() => {\n        const map = new Map(161, 81);\n        const game = new Game(RANDOM_GAME_ID, map, undefined, undefined, new Window(11, 22));\n        socket.emit('createGame', game.id, game);\n      }}>Create a Game\n      </button>\n    </div>\n  );\n}\n\nexport default Lobby;","import React, { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport { GameRenderer } from './GameRenderer';\nimport io from 'socket.io-client';\nimport Lobby from './Lobby';\nimport { Game, Me, Team, User } from './beans';\nimport { UUID } from './utils';\n\nfunction App() {\n  const appRef = useRef(null);\n  const app = appRef.current;\n  const [socket, setSocket] = useState(null);\n  const [game, setGame] = useState(null);\n\n  useEffect(() => {\n    const socket = io.connect('http://172.24.96.188:8080');\n    setSocket(socket);\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!socket) return;\n\n    const server = {\n      updateGame: updatedGame => socket.emit('updateGame', updatedGame),\n      updateMap: (i, j, value) => socket.emit('updateMap', game.id, i, j, value),\n      updateUser: updatedUser => socket.emit('updateUser', game.id, updatedUser),\n      updateTeam: updatedTeam => socket.emit('updateTeam', game.id, updatedTeam),\n    };\n\n    if (game) {\n      game.sync(server);\n    }\n\n    const handleJoinGame = gameJson => {\n      const game = Game.restore(gameJson);\n      const teamId = game.users.filter(user => user.teamId === 0).length * 2 < game.users.length ? 0 : 1;\n      const allies = game.users.filter(user => user.teamId === teamId);\n      game.users.push(new Me(UUID, teamId, game.getSpawnPos(teamId, allies.length)));\n      setGame(game);\n      socket.emit('updateGame', game);\n    };\n\n    const handleUpdateGame = gameJson => {\n      if (!game) return;\n      const updatedGame = Game.restore(gameJson);\n      game.sync(null);\n      Object.assign(game, updatedGame);\n      game.sync(server);\n    };\n\n    const handleUpdateMap = (i, j, value) => {\n      if (!game) return;\n      game.map.map[i][j] = value;\n    };\n\n    const handleUpdateUser = userJson => {\n      if (!game) return;\n      const updatedUser = User.restore(userJson);\n      const user = game.users.find(user => user.uuid === updatedUser.uuid);\n      if (!user) return;\n      user.sync(null);\n      Object.assign(user, updatedUser);\n      user.sync(server);\n    };\n\n    const handleUpdateTeam = teamJson => {\n      if (!game) return;\n      const updatedTeam = Team.restore(teamJson);\n      const team = game.teams.find(team => team.id === updatedTeam.id);\n      if (!team) return;\n      team.sync(null);\n      Object.assign(team, updatedTeam);\n      team.sync(server);\n    };\n\n    socket.on('joinGame', handleJoinGame);\n    socket.on('updateGame', handleUpdateGame);\n    socket.on('updateMap', handleUpdateMap);\n    socket.on('updateUser', handleUpdateUser);\n    socket.on('updateTeam', handleUpdateTeam);\n\n    return () => {\n      socket.removeListener('joinGame', handleJoinGame);\n      socket.removeListener('updateGame', handleUpdateGame);\n      socket.removeListener('updateMap', handleUpdateMap);\n      socket.removeListener('updateUser', handleUpdateUser);\n      socket.removeListener('updateTeam', handleUpdateTeam);\n    };\n  }, [game, socket]);\n\n  return (\n    <div className=\"App\" ref={appRef}\n         onClick={() => {\n           if (!document.fullscreenElement) {\n             if (app && app.requestFullscreen) {\n               // app.requestFullscreen().catch(alert);\n             }\n           }\n         }}>\n      {\n        game &&\n        <GameRenderer game={game}/>\n      }\n      {\n        !game && socket &&\n        <Lobby socket={socket}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}